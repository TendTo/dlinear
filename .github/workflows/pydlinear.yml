name: dlinear CI

on:
  push:
    branches: [main, feat/nn-verification]
    paths:
      - "dlinear/**"
      - "pydlinear/**"
  pull_request:
    branches: [main, feat/nn-verification]
    paths:
      - "dlinear/**"
      - "pydlinear/**"

env:
  PACKAGES: "build-essential automake libtool flex bison"

jobs:
  build-wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Install apt dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ${{ env.PACKAGES }}
          version: 1.0

      - name: Cache Bazel
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

      - name: Build wheels
        run: |
          mkdir -p dist
          for py_version in 3.8 3.9 3.10 3.11 3.12; do
            bazel build --config=pydlinear --python_version=$py_version //pydlinear:pydlinear_wheel
            cp $(bazel cquery --output=files --config=pydlinear --python_version=$py_version //pydlinear:pydlinear_wheel) dist/
          done

      - name: Build source distribution
        run: |
          python3 -m setup sdist

      - name: Publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
          TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
        run: |
          twine upload dist/*
