{
  "lockFileVersion": 11,
  "registryFileHashes": {
    "https://bcr.bazel.build/bazel_registry.json": "8a28e4aff06ee60aed2a8c281907fb8bcbf3b753c91fb5a5c57da3215d5b3497",
    "https://bcr.bazel.build/modules/abseil-cpp/20210324.2/MODULE.bazel": "7cd0312e064fde87c8d1cd79ba06c876bd23630c83466e9500321be55c96ace2",
    "https://bcr.bazel.build/modules/abseil-cpp/20211102.0/MODULE.bazel": "70390338f7a5106231d20620712f7cccb659cd0e9d073d1991c038eb9fc57589",
    "https://bcr.bazel.build/modules/abseil-cpp/20230125.1/MODULE.bazel": "89047429cb0207707b2dface14ba7f8df85273d484c2572755be4bab7ce9c3a0",
    "https://bcr.bazel.build/modules/abseil-cpp/20230802.0.bcr.1/MODULE.bazel": "1c8cec495288dccd14fdae6e3f95f772c1c91857047a098fad772034264cc8cb",
    "https://bcr.bazel.build/modules/abseil-cpp/20230802.0/MODULE.bazel": "d253ae36a8bd9ee3c5955384096ccb6baf16a1b1e93e858370da0a3b94f77c16",
    "https://bcr.bazel.build/modules/abseil-cpp/20240116.2/MODULE.bazel": "73939767a4686cd9a520d16af5ab440071ed75cec1a876bf2fcfaf1f71987a16",
    "https://bcr.bazel.build/modules/abseil-cpp/20240116.2/source.json": "750d5e29326fb59cbe61116a7b803c8a1d0a7090a9c8ed89888d188e3c473fc7",
    "https://bcr.bazel.build/modules/apple_support/1.15.1/MODULE.bazel": "a0556fefca0b1bb2de8567b8827518f94db6a6e7e7d632b4c48dc5f865bc7c85",
    "https://bcr.bazel.build/modules/apple_support/1.15.1/source.json": "517f2b77430084c541bc9be2db63fdcbb7102938c5f64c17ee60ffda2e5cf07b",
    "https://bcr.bazel.build/modules/apple_support/1.5.0/MODULE.bazel": "50341a62efbc483e8a2a6aec30994a58749bd7b885e18dd96aa8c33031e558ef",
    "https://bcr.bazel.build/modules/argparse/3.0.0/MODULE.bazel": "6386dddfa060f57966ab6dc2922cc3b404f5e7aaf9e1bb4639e3c2b051b6ff6a",
    "https://bcr.bazel.build/modules/argparse/3.0.0/source.json": "a5be5f3f8a0689082d7798ff2ae6049d90bfa234552b9f84ce09fd632126f3b3",
    "https://bcr.bazel.build/modules/bazel_features/1.1.1/MODULE.bazel": "27b8c79ef57efe08efccbd9dd6ef70d61b4798320b8d3c134fd571f78963dbcd",
    "https://bcr.bazel.build/modules/bazel_features/1.11.0/MODULE.bazel": "f9382337dd5a474c3b7d334c2f83e50b6eaedc284253334cf823044a26de03e8",
    "https://bcr.bazel.build/modules/bazel_features/1.15.0/MODULE.bazel": "d38ff6e517149dc509406aca0db3ad1efdd890a85e049585b7234d04238e2a4d",
    "https://bcr.bazel.build/modules/bazel_features/1.15.0/source.json": "483d0d339c23732f16b995fab1323147c1d2cc4b1c6ca4f832373aff028fdea9",
    "https://bcr.bazel.build/modules/bazel_features/1.2.0/MODULE.bazel": "122b2b606622afbaa498913d54f52d9bcd2d19a5edd1bd6d6c5aa17441c4d5f9",
    "https://bcr.bazel.build/modules/bazel_features/1.9.1/MODULE.bazel": "8f679097876a9b609ad1f60249c49d68bfab783dd9be012faf9d82547b14815a",
    "https://bcr.bazel.build/modules/bazel_skylib/1.0.3/MODULE.bazel": "bcb0fd896384802d1ad283b4e4eb4d718eebd8cb820b0a2c3a347fb971afd9d8",
    "https://bcr.bazel.build/modules/bazel_skylib/1.1.1/MODULE.bazel": "1add3e7d93ff2e6998f9e118022c84d163917d912f5afafb3058e3d2f1545b5e",
    "https://bcr.bazel.build/modules/bazel_skylib/1.2.0/MODULE.bazel": "44fe84260e454ed94ad326352a698422dbe372b21a1ac9f3eab76eb531223686",
    "https://bcr.bazel.build/modules/bazel_skylib/1.2.1/MODULE.bazel": "f35baf9da0efe45fa3da1696ae906eea3d615ad41e2e3def4aeb4e8bc0ef9a7a",
    "https://bcr.bazel.build/modules/bazel_skylib/1.3.0/MODULE.bazel": "20228b92868bf5cfc41bda7afc8a8ba2a543201851de39d990ec957b513579c5",
    "https://bcr.bazel.build/modules/bazel_skylib/1.4.1/MODULE.bazel": "a0dcb779424be33100dcae821e9e27e4f2901d9dfd5333efe5ac6a8d7ab75e1d",
    "https://bcr.bazel.build/modules/bazel_skylib/1.4.2/MODULE.bazel": "3bd40978e7a1fac911d5989e6b09d8f64921865a45822d8b09e815eaa726a651",
    "https://bcr.bazel.build/modules/bazel_skylib/1.5.0/MODULE.bazel": "32880f5e2945ce6a03d1fbd588e9198c0a959bb42297b2cfaf1685b7bc32e138",
    "https://bcr.bazel.build/modules/bazel_skylib/1.6.1/MODULE.bazel": "8fdee2dbaace6c252131c00e1de4b165dc65af02ea278476187765e1a617b917",
    "https://bcr.bazel.build/modules/bazel_skylib/1.7.1/MODULE.bazel": "3120d80c5861aa616222ec015332e5f8d3171e062e3e804a2a0253e1be26e59b",
    "https://bcr.bazel.build/modules/bazel_skylib/1.7.1/source.json": "f121b43eeefc7c29efbd51b83d08631e2347297c95aac9764a701f2a6a2bb953",
    "https://bcr.bazel.build/modules/buildozer/7.1.2/MODULE.bazel": "2e8dd40ede9c454042645fd8d8d0cd1527966aa5c919de86661e62953cd73d84",
    "https://bcr.bazel.build/modules/buildozer/7.1.2/source.json": "c9028a501d2db85793a6996205c8de120944f50a0d570438fcae0457a5f9d1f8",
    "https://bcr.bazel.build/modules/bzip2/1.0.8/MODULE.bazel": "83ee443b286b0b91566e5ee77e74ba6445895f3135467893871560f9e4ebc159",
    "https://bcr.bazel.build/modules/bzip2/1.0.8/source.json": "b64f3a2f973749cf5f6ee32b3d804af56a35a746228a7845ed5daa31c8cc8af1",
    "https://bcr.bazel.build/modules/cpplint/1.6.1/MODULE.bazel": "b62edec43ba2af3aeceb94ac3bb55e2c23d6472d8e60b57bcc5505f4d164dcf6",
    "https://bcr.bazel.build/modules/cpplint/1.6.1/source.json": "d3f032a807a1983a01938bc711cbc549e29b153c6d2138ed9dc707fc5543de3f",
    "https://bcr.bazel.build/modules/depend_on_what_you_use/0.5.0/MODULE.bazel": "e2ad8247de38bd508f2db4c02d70a15907de19f88e3f9abd620175c23c614ecf",
    "https://bcr.bazel.build/modules/depend_on_what_you_use/0.5.0/source.json": "66a914aac7841372edb15ef3444859bf04500e20a0e58fd7cc78a14530a281aa",
    "https://bcr.bazel.build/modules/fmt/11.0.2/MODULE.bazel": "d9e0ea6f68a762a84055172ce8f55cc01da950c94b5e27f66c1acc14e6fc59ce",
    "https://bcr.bazel.build/modules/fmt/11.0.2/source.json": "36cde5a3cbbee5eefc1e7f8a5a66d8ac9f352f7742bdd0c9b2d869601169c881",
    "https://bcr.bazel.build/modules/google_benchmark/1.8.2/MODULE.bazel": "a70cf1bba851000ba93b58ae2f6d76490a9feb74192e57ab8e8ff13c34ec50cb",
    "https://bcr.bazel.build/modules/googletest/1.11.0/MODULE.bazel": "3a83f095183f66345ca86aa13c58b59f9f94a2f81999c093d4eeaa2d262d12f4",
    "https://bcr.bazel.build/modules/googletest/1.14.0.bcr.1/MODULE.bazel": "22c31a561553727960057361aa33bf20fb2e98584bc4fec007906e27053f80c6",
    "https://bcr.bazel.build/modules/googletest/1.14.0/MODULE.bazel": "cfbcbf3e6eac06ef9d85900f64424708cc08687d1b527f0ef65aa7517af8118f",
    "https://bcr.bazel.build/modules/googletest/1.15.2/MODULE.bazel": "6de1edc1d26cafb0ea1a6ab3f4d4192d91a312fd2d360b63adaa213cd00b2108",
    "https://bcr.bazel.build/modules/googletest/1.15.2/source.json": "dbdda654dcb3a0d7a8bc5d0ac5fc7e150b58c2a986025ae5bc634bb2cb61f470",
    "https://bcr.bazel.build/modules/libpfm/4.11.0/MODULE.bazel": "45061ff025b301940f1e30d2c16bea596c25b176c8b6b3087e92615adbd52902",
    "https://bcr.bazel.build/modules/nlohmann_json/3.11.3/MODULE.bazel": "87023db2f55fc3a9949c7b08dc711fae4d4be339a80a99d04453c4bb3998eefc",
    "https://bcr.bazel.build/modules/nlohmann_json/3.11.3/source.json": "296c63a90c6813e53b3812d24245711981fc7e563d98fe15625f55181494488a",
    "https://bcr.bazel.build/modules/onnx/1.16.2/MODULE.bazel": "a3344a9a8017d8751b676c1ada0ab0d6d8937f8d35fef0a1b2d45007e7cf40d9",
    "https://bcr.bazel.build/modules/onnx/1.16.2/source.json": "ba33a8b33d7b6213e5f63887ca60c3a3c4422107f247f0e4bdd8985a35a4f0f7",
    "https://bcr.bazel.build/modules/platforms/0.0.10/MODULE.bazel": "8cb8efaf200bdeb2150d93e162c40f388529a25852b332cec879373771e48ed5",
    "https://bcr.bazel.build/modules/platforms/0.0.10/source.json": "f22828ff4cf021a6b577f1bf6341cb9dcd7965092a439f64fc1bb3b7a5ae4bd5",
    "https://bcr.bazel.build/modules/platforms/0.0.4/MODULE.bazel": "9b328e31ee156f53f3c416a64f8491f7eb731742655a47c9eec4703a71644aee",
    "https://bcr.bazel.build/modules/platforms/0.0.5/MODULE.bazel": "5733b54ea419d5eaf7997054bb55f6a1d0b5ff8aedf0176fef9eea44f3acda37",
    "https://bcr.bazel.build/modules/platforms/0.0.6/MODULE.bazel": "ad6eeef431dc52aefd2d77ed20a4b353f8ebf0f4ecdd26a807d2da5aa8cd0615",
    "https://bcr.bazel.build/modules/platforms/0.0.7/MODULE.bazel": "72fd4a0ede9ee5c021f6a8dd92b503e089f46c227ba2813ff183b71616034814",
    "https://bcr.bazel.build/modules/platforms/0.0.8/MODULE.bazel": "9f142c03e348f6d263719f5074b21ef3adf0b139ee4c5133e2aa35664da9eb2d",
    "https://bcr.bazel.build/modules/platforms/0.0.9/MODULE.bazel": "4a87a60c927b56ddd67db50c89acaa62f4ce2a1d2149ccb63ffd871d5ce29ebc",
    "https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel": "a5a29bb89544f9b97edce05642fac225a808b5b7be74038ea3640fae2f8e66a7",
    "https://bcr.bazel.build/modules/protobuf/23.1/MODULE.bazel": "88b393b3eb4101d18129e5db51847cd40a5517a53e81216144a8c32dfeeca52a",
    "https://bcr.bazel.build/modules/protobuf/24.4/MODULE.bazel": "7bc7ce5f2abf36b3b7b7c8218d3acdebb9426aeb35c2257c96445756f970eb12",
    "https://bcr.bazel.build/modules/protobuf/24.4/source.json": "ace4b8c65d4cfe64efe544f09fc5e5df77faf3a67fbb29c5341e0d755d9b15d6",
    "https://bcr.bazel.build/modules/protobuf/3.19.0/MODULE.bazel": "6b5fbb433f760a99a22b18b6850ed5784ef0e9928a72668b66e4d7ccd47db9b0",
    "https://bcr.bazel.build/modules/protobuf/3.19.6/MODULE.bazel": "9233edc5e1f2ee276a60de3eaa47ac4132302ef9643238f23128fea53ea12858",
    "https://bcr.bazel.build/modules/pybind11_bazel/2.11.1/MODULE.bazel": "88af1c246226d87e65be78ed49ecd1e6f5e98648558c14ce99176da041dc378e",
    "https://bcr.bazel.build/modules/pybind11_bazel/2.12.0/MODULE.bazel": "e6f4c20442eaa7c90d7190d8dc539d0ab422f95c65a57cc59562170c58ae3d34",
    "https://bcr.bazel.build/modules/pybind11_bazel/2.12.0/source.json": "6900fdc8a9e95866b8c0d4ad4aba4d4236317b5c1cd04c502df3f0d33afed680",
    "https://bcr.bazel.build/modules/re2/2023-09-01/MODULE.bazel": "cb3d511531b16cfc78a225a9e2136007a48cf8a677e4264baeab57fe78a80206",
    "https://bcr.bazel.build/modules/re2/2024-07-02/MODULE.bazel": "0eadc4395959969297cbcf31a249ff457f2f1d456228c67719480205aa306daa",
    "https://bcr.bazel.build/modules/re2/2024-07-02/source.json": "547d0111a9d4f362db32196fef805abbf3676e8d6afbe44d395d87816c1130ca",
    "https://bcr.bazel.build/modules/rules_bison/0.2.2/MODULE.bazel": "4326371dd66dda3c04765cd7f1c64c5dbc064c673555078ec1e4f758ba77d4ba",
    "https://bcr.bazel.build/modules/rules_bison/0.2.2/source.json": "a11082c4935d0927c2e90d5d5abd44ceeca81a40b07d96b7a21bebf166f78f42",
    "https://bcr.bazel.build/modules/rules_cc/0.0.1/MODULE.bazel": "cb2aa0747f84c6c3a78dad4e2049c154f08ab9d166b1273835a8174940365647",
    "https://bcr.bazel.build/modules/rules_cc/0.0.10/MODULE.bazel": "ec1705118f7eaedd6e118508d3d26deba2a4e76476ada7e0e3965211be012002",
    "https://bcr.bazel.build/modules/rules_cc/0.0.10/source.json": "90310b16e0e7df0cf40f8d1dccd7d373360f42419a6bfbbf5bb013182dd70e84",
    "https://bcr.bazel.build/modules/rules_cc/0.0.2/MODULE.bazel": "6915987c90970493ab97393024c156ea8fb9f3bea953b2f3ec05c34f19b5695c",
    "https://bcr.bazel.build/modules/rules_cc/0.0.6/MODULE.bazel": "abf360251023dfe3efcef65ab9d56beefa8394d4176dd29529750e1c57eaa33f",
    "https://bcr.bazel.build/modules/rules_cc/0.0.8/MODULE.bazel": "964c85c82cfeb6f3855e6a07054fdb159aced38e99a5eecf7bce9d53990afa3e",
    "https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel": "836e76439f354b89afe6a911a7adf59a6b2518fafb174483ad78a2a2fde7b1c5",
    "https://bcr.bazel.build/modules/rules_doxygen/1.1.3/MODULE.bazel": "aa39b1405fefdc940cab38b33c0b9cccf50fc47e9fbea65f706588520a9d3b73",
    "https://bcr.bazel.build/modules/rules_doxygen/1.1.3/source.json": "0306441ad22a41240b98820e2ed23e5b477ed18d80381edf8cfe49f365836198",
    "https://bcr.bazel.build/modules/rules_flex/0.2.1/MODULE.bazel": "fcac7054f1395733197089cb98fcdca1b3f06b2a973d8360cb45130e5f59ddb7",
    "https://bcr.bazel.build/modules/rules_flex/0.2.1/source.json": "8175f36e55139baf4a09b10365cb2c78ab664800d2ac6d32e4ac2d03622dbf4f",
    "https://bcr.bazel.build/modules/rules_foreign_cc/0.12.0/MODULE.bazel": "d850fab025ce79a845077035861034393f1cc1efc1d9d58d766272a26ba67def",
    "https://bcr.bazel.build/modules/rules_foreign_cc/0.12.0/source.json": "c97ddc022179fe30d1a9b94425d1e56d0a633f72332c55463e584a52ce1b38ac",
    "https://bcr.bazel.build/modules/rules_foreign_cc/0.9.0/MODULE.bazel": "c9e8c682bf75b0e7c704166d79b599f93b72cfca5ad7477df596947891feeef6",
    "https://bcr.bazel.build/modules/rules_java/4.0.0/MODULE.bazel": "5a78a7ae82cd1a33cef56dc578c7d2a46ed0dca12643ee45edbb8417899e6f74",
    "https://bcr.bazel.build/modules/rules_java/7.1.0/MODULE.bazel": "30d9135a2b6561c761bd67bd4990da591e6bdc128790ce3e7afd6a3558b2fb64",
    "https://bcr.bazel.build/modules/rules_java/7.6.1/MODULE.bazel": "2f14b7e8a1aa2f67ae92bc69d1ec0fa8d9f827c4e17ff5e5f02e91caa3b2d0fe",
    "https://bcr.bazel.build/modules/rules_java/7.6.5/MODULE.bazel": "481164be5e02e4cab6e77a36927683263be56b7e36fef918b458d7a8a1ebadb1",
    "https://bcr.bazel.build/modules/rules_java/7.6.5/source.json": "a805b889531d1690e3c72a7a7e47a870d00323186a9904b36af83aa3d053ee8d",
    "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel": "a56b85e418c83eb1839819f0b515c431010160383306d13ec21959ac412d2fe7",
    "https://bcr.bazel.build/modules/rules_jvm_external/5.1/MODULE.bazel": "33f6f999e03183f7d088c9be518a63467dfd0be94a11d0055fe2d210f89aa909",
    "https://bcr.bazel.build/modules/rules_jvm_external/5.2/MODULE.bazel": "d9351ba35217ad0de03816ef3ed63f89d411349353077348a45348b096615036",
    "https://bcr.bazel.build/modules/rules_jvm_external/5.2/source.json": "10572111995bc349ce31c78f74b3c147f6b3233975c7fa5eff9211f6db0d34d9",
    "https://bcr.bazel.build/modules/rules_license/0.0.3/MODULE.bazel": "627e9ab0247f7d1e05736b59dbb1b6871373de5ad31c3011880b4133cafd4bd0",
    "https://bcr.bazel.build/modules/rules_license/0.0.7/MODULE.bazel": "088fbeb0b6a419005b89cf93fe62d9517c0a2b8bb56af3244af65ecfe37e7d5d",
    "https://bcr.bazel.build/modules/rules_license/0.0.7/source.json": "355cc5737a0f294e560d52b1b7a6492d4fff2caf0bef1a315df5a298fca2d34a",
    "https://bcr.bazel.build/modules/rules_m4/0.2.3/MODULE.bazel": "a201ad119823e1af5024240e1e1ef294425d9be73a698cb41c8450e6c8e107e3",
    "https://bcr.bazel.build/modules/rules_m4/0.2.3/source.json": "d2fd4b91471317d0e6368ece3da2334884879ed6d6289591c7312944e50dea70",
    "https://bcr.bazel.build/modules/rules_pkg/0.7.0/MODULE.bazel": "df99f03fc7934a4737122518bb87e667e62d780b610910f0447665a7e2be62dc",
    "https://bcr.bazel.build/modules/rules_pkg/1.0.1/MODULE.bazel": "5b1df97dbc29623bccdf2b0dcd0f5cb08e2f2c9050aab1092fd39a41e82686ff",
    "https://bcr.bazel.build/modules/rules_pkg/1.0.1/source.json": "bd82e5d7b9ce2d31e380dd9f50c111d678c3bdaca190cb76b0e1c71b05e1ba8a",
    "https://bcr.bazel.build/modules/rules_proto/4.0.0/MODULE.bazel": "a7a7b6ce9bee418c1a760b3d84f83a299ad6952f9903c67f19e4edd964894e06",
    "https://bcr.bazel.build/modules/rules_proto/5.3.0-21.7/MODULE.bazel": "e8dff86b0971688790ae75528fe1813f71809b5afd57facb44dad9e8eca631b7",
    "https://bcr.bazel.build/modules/rules_proto/6.0.0-rc1/MODULE.bazel": "1e5b502e2e1a9e825eef74476a5a1ee524a92297085015a052510b09a1a09483",
    "https://bcr.bazel.build/modules/rules_proto/6.0.0-rc2/MODULE.bazel": "e17f94f8a347e2c808517b65d74988839d2d62daceb50073e44060193b785eb1",
    "https://bcr.bazel.build/modules/rules_proto/6.0.0-rc2/source.json": "0c0e473bc88cb9eab9e8dd98d2dae51b2190d2f8ab7d55c519b1439c4a7fa9a0",
    "https://bcr.bazel.build/modules/rules_python/0.10.2/MODULE.bazel": "cc82bc96f2997baa545ab3ce73f196d040ffb8756fd2d66125a530031cd90e5f",
    "https://bcr.bazel.build/modules/rules_python/0.22.1/MODULE.bazel": "26114f0c0b5e93018c0c066d6673f1a2c3737c7e90af95eff30cfee38d0bbac7",
    "https://bcr.bazel.build/modules/rules_python/0.23.1/MODULE.bazel": "49ffccf0511cb8414de28321f5fcf2a31312b47c40cc21577144b7447f2bf300",
    "https://bcr.bazel.build/modules/rules_python/0.25.0/MODULE.bazel": "72f1506841c920a1afec76975b35312410eea3aa7b63267436bfb1dd91d2d382",
    "https://bcr.bazel.build/modules/rules_python/0.27.1/MODULE.bazel": "65dc875cc1a06c30d5bbdba7ab021fd9e551a6579e408a3943a61303e2228a53",
    "https://bcr.bazel.build/modules/rules_python/0.31.0/MODULE.bazel": "93a43dc47ee570e6ec9f5779b2e64c1476a6ce921c48cc9a1678a91dd5f8fd58",
    "https://bcr.bazel.build/modules/rules_python/0.33.2/MODULE.bazel": "3e036c4ad8d804a4dad897d333d8dce200d943df4827cb849840055be8d2e937",
    "https://bcr.bazel.build/modules/rules_python/0.36.0/MODULE.bazel": "a4ce1ccea92b9106c7d16ab9ee51c6183107e78ba4a37aa65055227b80cd480c",
    "https://bcr.bazel.build/modules/rules_python/0.36.0/source.json": "b79cbb7b2ae1751949e2f6ee6692822e4ffd13ca1e959ce99abec4ac7666162a",
    "https://bcr.bazel.build/modules/rules_python/0.4.0/MODULE.bazel": "9208ee05fd48bf09ac60ed269791cf17fb343db56c8226a720fbb1cdf467166c",
    "https://bcr.bazel.build/modules/stardoc/0.5.1/MODULE.bazel": "1a05d92974d0c122f5ccf09291442580317cdd859f07a8655f1db9a60374f9f8",
    "https://bcr.bazel.build/modules/stardoc/0.5.3/MODULE.bazel": "c7f6948dae6999bf0db32c1858ae345f112cacf98f174c7a8bb707e41b974f1c",
    "https://bcr.bazel.build/modules/stardoc/0.7.0/MODULE.bazel": "05e3d6d30c099b6770e97da986c53bd31844d7f13d41412480ea265ac9e8079c",
    "https://bcr.bazel.build/modules/stardoc/0.7.0/source.json": "e3c524bf2ef20992539ce2bc4a2243f4853130209ee831689983e28d05769099",
    "https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/MODULE.bazel": "7298990c00040a0e2f121f6c32544bab27d4452f80d9ce51349b1a28f3005c43",
    "https://bcr.bazel.build/modules/upb/0.0.0-20230516-61a97ef/MODULE.bazel": "c0df5e35ad55e264160417fd0875932ee3c9dda63d9fccace35ac62f45e1b6f9",
    "https://bcr.bazel.build/modules/upb/0.0.0-20230516-61a97ef/source.json": "b2150404947339e8b947c6b16baa39fa75657f4ddec5e37272c7b11c7ab533bc",
    "https://bcr.bazel.build/modules/xz/5.4.5/MODULE.bazel": "b3fe7f5c91e7e8f4e11a8a524864ed94791d695d667d906705168f58bd4cd851",
    "https://bcr.bazel.build/modules/xz/5.4.5/source.json": "6f8ebfa18a57b9d4036339680e743690af88faed4a08b7dc6a11931a31d20be8",
    "https://bcr.bazel.build/modules/zlib/1.2.11/MODULE.bazel": "07b389abc85fdbca459b69e2ec656ae5622873af3f845e1c9d80fe179f3effa0",
    "https://bcr.bazel.build/modules/zlib/1.2.12/MODULE.bazel": "3b1a8834ada2a883674be8cbd36ede1b6ec481477ada359cd2d3ddc562340b27",
    "https://bcr.bazel.build/modules/zlib/1.3.1.bcr.3/MODULE.bazel": "af322bc08976524477c79d1e45e241b6efbeb918c497e8840b8ab116802dda79",
    "https://bcr.bazel.build/modules/zlib/1.3.1.bcr.3/source.json": "2be409ac3c7601245958cd4fcdff4288be79ed23bd690b4b951f500d54ee6e7d",
    "https://bcr.bazel.build/modules/zlib/1.3.1/MODULE.bazel": "751c9940dcfe869f5f7274e1295422a34623555916eb98c174c1e945594bf198",
    "https://bcr.bazel.build/modules/zstd/1.5.6/MODULE.bazel": "471ebe7d3cdd8c6469390fcf623eb4779ff55fbee0a87f1dc57a1def468b96d4",
    "https://bcr.bazel.build/modules/zstd/1.5.6/source.json": "02010c3333fc89b44fe861db049968decb6e688411f7f9d4f6791d74f9adfb51"
  },
  "selectedYankedVersions": {},
  "moduleExtensions": {
    "@@apple_support~//crosstool:setup.bzl%apple_cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "ltCGFbl/LQQZXn/LEMXfKX7pGwyqNiOCHcmiQW0tmjM=",
        "usagesDigest": "RkqDb8JtSSm4rLheCLMw/Dx3QQE7dZbl4taOVEYaQZg=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_apple_cc": {
            "bzlFile": "@@apple_support~//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf",
            "attributes": {}
          },
          "local_config_apple_cc_toolchains": {
            "bzlFile": "@@apple_support~//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf_toolchains",
            "attributes": {}
          }
        },
        "recordedRepoMappingEntries": [
          [
            "apple_support~",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@com_github_nelhage_rules_boost~//:extensions.bzl%boost_modules": {
      "general": {
        "bzlTransitiveDigest": "YjuGCnTLA9YRvcDBuP9ZCPnYyt72XgzHu6JpQ5OU1+c=",
        "usagesDigest": "uSg0KsGO+EbJnulVdM2DaYgEeTACTExA/WyvSdU/Ixg=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "boost": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file": "@@com_github_nelhage_rules_boost~//:boost.BUILD",
              "patch_cmds": [
                "rm -f doc/pdf/BUILD"
              ],
              "patch_cmds_win": [
                "Remove-Item -Force doc/pdf/BUILD"
              ],
              "url": "https://github.com/boostorg/boost/releases/download/boost-1.84.0/boost-1.84.0.tar.gz",
              "sha256": "4d27e9efed0f6f152dc28db6430b9d3dfb40c0345da7342eaa5a987dde57bd95",
              "strip_prefix": "boost-1.84.0"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "com_github_nelhage_rules_boost~",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@platforms//host:extension.bzl%host_platform": {
      "general": {
        "bzlTransitiveDigest": "xelQcPZH8+tmuOHVjL9vDxMnnQNMlwj0SlvgoqBkm4U=",
        "usagesDigest": "V1R2Y2oMxKNfx2WCWpSCaUV1WefW1o8HZGm3v1vHgY4=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "host_platform": {
            "bzlFile": "@@platforms//host:extension.bzl",
            "ruleClassName": "host_platform_repo",
            "attributes": {}
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@protobuf~//:non_module_deps.bzl%non_module_deps": {
      "general": {
        "bzlTransitiveDigest": "jsbfONl9OksDWiAs7KDFK5chH/tYI3DngdM30NKdk5Y=",
        "usagesDigest": "eVrT3hFCIZNRuTKpfWDzSIwTi2p6U6PWbt+tNWl/Tqk=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "utf8_range": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/protocolbuffers/utf8_range/archive/de0b4a8ff9b5d4c98108bdfe723291a33c52c54f.zip"
              ],
              "strip_prefix": "utf8_range-de0b4a8ff9b5d4c98108bdfe723291a33c52c54f",
              "sha256": "5da960e5e5d92394c809629a03af3c7709d2d3d0ca731dacb3a9fb4bf28f7702"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "protobuf~",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@pybind11_bazel~//:internal_configure.bzl%internal_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "+F47SE20NlARCHVGbd4r7kkjg4OA0eCJcOd5fqKq4fQ=",
        "usagesDigest": "iH2lKTfsNEpn2MqtGpBNwJrxbb2C7DiYmh/XuKgDtr8=",
        "recordedFileInputs": {
          "@@pybind11_bazel~//MODULE.bazel": "e6f4c20442eaa7c90d7190d8dc539d0ab422f95c65a57cc59562170c58ae3d34"
        },
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "pybind11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file": "@@pybind11_bazel~//:pybind11-BUILD.bazel",
              "strip_prefix": "pybind11-2.12.0",
              "urls": [
                "https://github.com/pybind/pybind11/archive/v2.12.0.zip"
              ]
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "pybind11_bazel~",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_bison~//bison/extensions:bison_repository_ext.bzl%bison_repository_ext": {
      "general": {
        "bzlTransitiveDigest": "A+3YMZenwhA/NwA7Bes9xuoVWQNCaBPxA05vtcFi8I4=",
        "usagesDigest": "TYgK7scFvTbBH0+zO+kwlvjG7KPhOsmGnJbLHrVFsnM=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bison_v3.3.2__cfg0A7AA425": {
            "bzlFile": "@@rules_bison~//bison/rules:bison_repository.bzl",
            "ruleClassName": "bison_repository",
            "attributes": {
              "version": "3.3.2",
              "extra_copts": [
                "-O3"
              ]
            }
          },
          "bison": {
            "bzlFile": "@@rules_bison~//bison/rules:bison_toolchain_repository.bzl",
            "ruleClassName": "bison_toolchain_repository",
            "attributes": {
              "bison_repository": "@bison_v3.3.2__cfg0A7AA425"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "bison"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@rules_bison~//bison/internal:default_toolchain_ext.bzl%default_toolchain_ext": {
      "general": {
        "bzlTransitiveDigest": "JVWcUny48LFS9D+xz4b9u/94awfBOIGXV5iu8iY/nRc=",
        "usagesDigest": "d7Z3y2AZdN7Sc4BdRU4h9HDd4nZUFM+Ls3iQYb3mCOA=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bison_v3.3.2": {
            "bzlFile": "@@rules_bison~//bison/rules:bison_repository.bzl",
            "ruleClassName": "bison_repository",
            "attributes": {
              "version": "3.3.2"
            }
          },
          "bison": {
            "bzlFile": "@@rules_bison~//bison/rules:bison_toolchain_repository.bzl",
            "ruleClassName": "bison_toolchain_repository",
            "attributes": {
              "bison_repository": "@bison_v3.3.2"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "bison"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@rules_doxygen~//:extensions.bzl%doxygen_extension": {
      "general": {
        "bzlTransitiveDigest": "wlTDTE8+uIoGsx6lHZ9aBeoKMJZs201ScrWQDMEORNg=",
        "usagesDigest": "5+T+5vowNJ19ZQ6kPiWv3m2arb3TOPJhzgXuyvmN9cM=",
        "recordedFileInputs": {
          "@@rules_doxygen~//doxygen.bzl": "7783ceedf3228ca93296372cb729f68001da23311b5fa1f3521d630f577d7f3b"
        },
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "doxygen": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file": "@@rules_doxygen~//:doxygen.BUILD.bazel",
              "url": "https://github.com/doxygen/doxygen/releases/download/Release_1_11_0/doxygen-1.11.0.linux.bin.tar.gz",
              "sha256": "db68ca22b43c3d7efd15351329db5af9146ab1ac7eaccd61a894fe36612da8fb",
              "patch_cmds": [
                "cat > 'doxygen.bzl' <<- EOF\n\"\"\"Doxygen rule for Bazel.\"\"\"\n\ndef _doxygen_impl(ctx):\n    doxyfile = ctx.actions.declare_file(\"Doxyfile\")\n    outs = [ctx.actions.declare_directory(out) for out in ctx.attr.outs]\n\n    if len(outs) == 0:\n        fail(\"At least one output folder must be specified\")\n\n    input_dirs = {(file.dirname or \".\"): None for file in ctx.files.srcs}\n    ctx.actions.expand_template(\n        template = ctx.file.doxyfile_template,\n        output = doxyfile,\n        substitutions = {\n            \"# {{INPUT}}\": \"INPUT = %s\" % \" \".join(input_dirs.keys()),\n            \"# {{DOT_PATH}}\": (\"DOT_PATH = %s\" % ctx.executable.dot_executable.dirname) if ctx.executable.dot_executable else \"\",\n            \"# {{ADDITIONAL PARAMETERS}}\": \"\\n\".join(ctx.attr.configurations),\n            \"# {{OUTPUT DIRECTORY}}\": \"OUTPUT_DIRECTORY = %s\" % doxyfile.dirname,\n        },\n    )\n\n    ctx.actions.run(\n        inputs = ctx.files.srcs + [doxyfile],\n        outputs = outs,\n        arguments = [doxyfile.path] + ctx.attr.doxygen_extra_args,\n        progress_message = \"Running doxygen\",\n        executable = ctx.executable._executable,\n    )\n    return [DefaultInfo(files = depset(outs))]\n\n_doxygen = rule(\n    doc = \"\"\"Run the doxygen binary to generate the documentation.\n\nIt is advised to use the `doxygen` macro instead of this rule directly.\n\n### Example\n\n```starlark\n# MODULE.bazel file\nbazel_dep(name = \"rules_doxygen\", dev_dependency = True)\ndoxygen_extension = use_extension(\"@rules_doxygen//:extensions.bzl\", \"doxygen_extension\")\nuse_repo(doxygen_extension, \"doxygen\")\n```\n\n```starlark\n# BUILD.bazel file\nload(\"@doxygen//:doxygen.bzl\", \"doxygen\")\n\ndoxygen(\n    name = \"doxygen\",\n    srcs = glob([\n        \"*.h\",\n        \"*.cpp\",\n    ]),\n    project_brief = \"Example project for doxygen\",\n    project_name = \"example\",\n)\n```\n\"\"\",\n    implementation = _doxygen_impl,\n    attrs = {\n        \"srcs\": attr.label_list(allow_files = True, doc = \"The source files to generate documentation for. Can include header files, source files, and any other file Doxygen can parse.\"),\n        \"configurations\": attr.string_list(doc = \"Additional configuration parameters to append to the Doxyfile. For example, to set the project name, use `PROJECT_NAME = example`.\"),\n        \"outs\": attr.string_list(default = [\"html\"], allow_empty = False, doc = \"\"\"The output folders to keep. If only the html outputs is of interest, the default value will do. Otherwise, a list of folders to keep is expected (e.g. `[\"html\", \"latex\"]`).\"\"\"),\n        \"doxyfile_template\": attr.label(\n            allow_single_file = True,\n            default = Label(\"@doxygen//:Doxyfile.template\"),\n            doc = \"\"\"The template file to use to generate the Doxyfile. You can provide your own or use the default one. \nThe following substitutions are available: \n- `# {{INPUT}}`: Subpackage directory in the sandbox.\n- `# {{DOT_PATH}}`: Indicate to doxygen the location of the `dot_executable`\n- `# {{ADDITIONAL PARAMETERS}}`: Additional parameters given in the `configurations` attribute.\n- `# {{OUTPUT DIRECTORY}}`: The directory provided in the `outs` attribute.\n\"\"\",\n        ),\n        \"dot_executable\": attr.label(\n            executable = True,\n            cfg = \"exec\",\n            allow_single_file = True,\n            doc = \"The dot executable to use. Must refer to an executable file.\",\n        ),\n        \"doxygen_extra_args\": attr.string_list(default = [], doc = \"Extra arguments to pass to the doxygen executable.\"),\n        \"_executable\": attr.label(\n            executable = True,\n            cfg = \"exec\",\n            allow_single_file = True,\n            default = Label(\"@doxygen//:executable\"),\n            doc = \"The doxygen executable to use. Must refer to an executable file.\",\n        ),\n    },\n)\n\ndef doxygen(\n        name,\n        srcs,\n        project_name = None,\n        project_brief = None,\n        project_number = None,\n        project_logo = None,\n        project_icon = None,\n        use_mdfile_as_mainpage = None,\n        extract_private = None,\n        html_footer = None,\n        html_header = None,\n        filter_patterns = [],\n        use_mathjax = None,\n        html_extra_stylesheet = [],\n        html_extra_files = [],\n        html_colorstyle = None,\n        aliases = [],\n        have_dot = None,\n        dot_image_format = None,\n        dot_transparent = None,\n        disable_index = None,\n        full_sidebar = None,\n        generate_treeview = None,\n        javadoc_autobrief = None,\n        builtin_stl_support = None,\n        hide_undoc_members = None,\n        hide_in_body_docs = None,\n        exclude_symbols = [],\n        example_path = None,\n        dot_executable = None,\n        configurations = [],\n        doxyfile_template = \"@doxygen//:Doxyfile.template\",\n        doxygen_extra_args = [],\n        outs = [\"html\"],\n        **kwargs):\n    \"\"\"\n    Generates documentation using Doxygen.\n\n    ### Example\n\n    ```starlark\n    # MODULE.bazel file\n    bazel_dep(name = \"rules_doxygen\", dev_dependency = True)\n    doxygen_extension = use_extension(\"@rules_doxygen//:extensions.bzl\", \"doxygen_extension\")\n    use_repo(doxygen_extension, \"doxygen\")\n    ```\n\n    ```starlark\n    # BUILD.bazel file\n    load(\"@doxygen//:doxygen.bzl\", \"doxygen\")\n\n    doxygen(\n        name = \"doxygen\",\n        srcs = glob([\n            \"*.h\",\n            \"*.cpp\",\n        ]),\n        project_brief = \"Example project for doxygen\",\n        project_name = \"example\",\n    )\n    ```\n\n    Args:\n        name: A name for the target.\n        srcs: A list of source files to generate documentation for.\n        project_name: The name of the project.\n        project_brief: A brief description of the project.\n        project_number: The version number of the project.\n        project_logo: The path to the project logo.\n        project_icon: The path to the project icon.\n        use_mdfile_as_mainpage: The path to the markdown file to use as the main page.\n        extract_private: Whether to extract private members.\n        html_footer: The path to the HTML footer file.\n        html_header: The path to the HTML header file.\n        filter_patterns: A list of filter patterns. Enables alteration of the input files before they are parsed by doxygen.\n        use_mathjax: Whether to use MathJax.\n        html_extra_stylesheet: A list of extra stylesheets.\n        html_extra_files: A list of extra files.\n        html_colorstyle: The color style to use for HTML.\n        aliases: A list of aliases.\n        have_dot: Whether to use dot.\n        dot_image_format: The image format to use for dot.\n        dot_transparent: Whether to use transparent backgrounds for dot.\n        disable_index: Whether to disable the index.\n        full_sidebar: Whether to use a full sidebar.\n        generate_treeview: Whether to generate a tree view.\n        javadoc_autobrief: Whether to use Javadoc-style auto brief.\n        builtin_stl_support: Whether to support the built-in standard library.\n        hide_undoc_members: Whether to hide undocumented members.\n        hide_in_body_docs: Whether to hide in body docs.\n        exclude_symbols: A list of symbols to exclude.\n        example_path: The path to the examples. They must be added to the source files.\n        dot_executable: Label of the doxygen executable. Make sure it is also added to the `srcs` of the macro \n        configurations: A list of additional configuration parameters to pass to Doxygen.\n        doxyfile_template: The template file to use to generate the Doxyfile.\n            The following substitutions are available:<br>\n            - `# {{INPUT}}`: Subpackage directory in the sandbox.<br>\n            - `# {{ADDITIONAL PARAMETERS}}`: Additional parameters given in the `configurations` attribute.<br>\n            - `# {{OUTPUT DIRECTORY}}`: The directory provided in the `outs` attribute.\n        doxygen_extra_args: Extra arguments to pass to the doxygen executable.\n        outs: The output folders bazel will keep. If only the html outputs is of interest, the default value will do.\n             otherwise, a list of folders to keep is expected (e.g. [\"html\", \"latex\"]).\n        **kwargs: Additional arguments to pass to the rule (e.g. `visibility = [\"//visibility:public\"], tags = [\"manual\"]`)\n    \"\"\"\n    if not configurations:\n        configurations = []\n    if project_name != None:\n        configurations.append(\"PROJECT_NAME = %s\" % project_name)\n    if project_brief != None:\n        configurations.append(\"PROJECT_BRIEF = %s\" % project_brief)\n    if project_number != None:\n        configurations.append(\"PROJECT_NUMBER = %s\" % project_number)\n    if project_logo != None:\n        configurations.append(\"PROJECT_LOGO = %s\" % project_logo)\n    if project_icon != None:\n        configurations.append(\"PROJECT_ICON = %s\" % project_icon)\n    if use_mdfile_as_mainpage != None:\n        configurations.append(\"USE_MDFILE_AS_MAINPAGE = %s\" % use_mdfile_as_mainpage)\n    if extract_private != None:\n        if type(extract_private) == type(True):\n            extract_private = \"YES\" if extract_private else \"NO\"\n        configurations.append(\"EXTRACT_PRIVATE = %s\" % extract_private)\n    if html_colorstyle != None:\n        configurations.append(\"HTML_COLORSTYLE = %s\" % html_colorstyle)\n    if html_footer != None:\n        configurations.append(\"HTML_FOOTER = %s\" % html_footer)\n    if html_header != None:\n        configurations.append(\"HTML_HEADER = %s\" % html_header)\n    if filter_patterns:\n        configurations.append(\"FILTER_PATTERNS = %s\" % \" \".join(filter_patterns))\n    if use_mathjax != None:\n        if type(use_mathjax) == type(True):\n            use_mathjax = \"YES\" if use_mathjax else \"NO\"\n        configurations.append(\"USE_MATHJAX = %s\" % use_mathjax)\n    if html_extra_stylesheet:\n        configurations.append(\"HTML_EXTRA_STYLESHEET = %s\" % \" \".join(html_extra_stylesheet))\n    if html_extra_files:\n        configurations.append(\"HTML_EXTRA_FILES = %s\" % \" \".join(html_extra_files))\n    if aliases:\n        configurations.append(\"ALIASES = %s\" % \" \".join(aliases))\n    if have_dot != None:\n        if type(have_dot) == type(True):\n            have_dot = \"YES\" if have_dot else \"NO\"\n        configurations.append(\"HAVE_DOT = %s\" % have_dot)\n    if dot_image_format != None:\n        configurations.append(\"DOT_IMAGE_FORMAT = %s\" % dot_image_format)\n    if dot_transparent != None:\n        if type(dot_transparent) == type(True):\n            dot_transparent = \"YES\" if dot_transparent else \"NO\"\n        configurations.append(\"DOT_TRANSPARENT = %s\" % dot_transparent)\n    if disable_index != None:\n        if type(disable_index) == type(True):\n            disable_index = \"YES\" if disable_index else \"NO\"\n        configurations.append(\"DISABLE_INDEX = %s\" % disable_index)\n    if full_sidebar != None:\n        if type(full_sidebar) == type(True):\n            full_sidebar = \"YES\" if full_sidebar else \"NO\"\n        configurations.append(\"FULL_SIDEBAR = %s\" % full_sidebar)\n    if generate_treeview != None:\n        if type(generate_treeview) == type(True):\n            generate_treeview = \"YES\" if generate_treeview else \"NO\"\n        configurations.append(\"GENERATE_TREEVIEW = %s\" % generate_treeview)\n    if javadoc_autobrief != None:\n        if type(javadoc_autobrief) == type(True):\n            javadoc_autobrief = \"YES\" if javadoc_autobrief else \"NO\"\n        configurations.append(\"JAVADOC_AUTOBRIEF = %s\" % javadoc_autobrief)\n    if builtin_stl_support != None:\n        if type(builtin_stl_support) == type(True):\n            builtin_stl_support = \"YES\" if builtin_stl_support else \"NO\"\n        configurations.append(\"BUILTIN_STL_SUPPORT = %s\" % builtin_stl_support)\n    if hide_undoc_members != None:\n        if type(hide_undoc_members) == type(True):\n            hide_undoc_members = \"YES\" if hide_undoc_members else \"NO\"\n        configurations.append(\"HIDE_UNDOC_MEMBERS = %s\" % hide_undoc_members)\n    if hide_in_body_docs != None:\n        if type(hide_in_body_docs) == type(True):\n            hide_in_body_docs = \"YES\" if hide_in_body_docs else \"NO\"\n        configurations.append(\"HIDE_IN_BODY_DOCS = %s\" % hide_in_body_docs)\n    if exclude_symbols:\n        configurations.append(\"EXCLUDE_SYMBOLS = %s\" % \" \".join(exclude_symbols))\n    if example_path != None:\n        configurations.append(\"EXAMPLE_PATH = %s\" % example_path)\n\n    _doxygen(\n        name = name,\n        srcs = srcs,\n        outs = outs,\n        configurations = configurations,\n        doxyfile_template = doxyfile_template,\n        doxygen_extra_args = doxygen_extra_args,\n        dot_executable = dot_executable,\n        **kwargs\n    )\n\nEOF"
              ],
              "patch_cmds_win": [
                "Set-Content -Path 'doxygen.bzl' -Value '\"\"\"Doxygen rule for Bazel.\"\"\"\n\ndef _doxygen_impl(ctx):\n    doxyfile = ctx.actions.declare_file(\"Doxyfile\")\n    outs = [ctx.actions.declare_directory(out) for out in ctx.attr.outs]\n\n    if len(outs) == 0:\n        fail(\"At least one output folder must be specified\")\n\n    input_dirs = {(file.dirname or \".\"): None for file in ctx.files.srcs}\n    ctx.actions.expand_template(\n        template = ctx.file.doxyfile_template,\n        output = doxyfile,\n        substitutions = {\n            \"# {{INPUT}}\": \"INPUT = %s\" % \" \".join(input_dirs.keys()),\n            \"# {{DOT_PATH}}\": (\"DOT_PATH = %s\" % ctx.executable.dot_executable.dirname) if ctx.executable.dot_executable else \"\",\n            \"# {{ADDITIONAL PARAMETERS}}\": \"\\n\".join(ctx.attr.configurations),\n            \"# {{OUTPUT DIRECTORY}}\": \"OUTPUT_DIRECTORY = %s\" % doxyfile.dirname,\n        },\n    )\n\n    ctx.actions.run(\n        inputs = ctx.files.srcs + [doxyfile],\n        outputs = outs,\n        arguments = [doxyfile.path] + ctx.attr.doxygen_extra_args,\n        progress_message = \"Running doxygen\",\n        executable = ctx.executable._executable,\n    )\n    return [DefaultInfo(files = depset(outs))]\n\n_doxygen = rule(\n    doc = \"\"\"Run the doxygen binary to generate the documentation.\n\nIt is advised to use the `doxygen` macro instead of this rule directly.\n\n### Example\n\n```starlark\n# MODULE.bazel file\nbazel_dep(name = \"rules_doxygen\", dev_dependency = True)\ndoxygen_extension = use_extension(\"@rules_doxygen//:extensions.bzl\", \"doxygen_extension\")\nuse_repo(doxygen_extension, \"doxygen\")\n```\n\n```starlark\n# BUILD.bazel file\nload(\"@doxygen//:doxygen.bzl\", \"doxygen\")\n\ndoxygen(\n    name = \"doxygen\",\n    srcs = glob([\n        \"*.h\",\n        \"*.cpp\",\n    ]),\n    project_brief = \"Example project for doxygen\",\n    project_name = \"example\",\n)\n```\n\"\"\",\n    implementation = _doxygen_impl,\n    attrs = {\n        \"srcs\": attr.label_list(allow_files = True, doc = \"The source files to generate documentation for. Can include header files, source files, and any other file Doxygen can parse.\"),\n        \"configurations\": attr.string_list(doc = \"Additional configuration parameters to append to the Doxyfile. For example, to set the project name, use `PROJECT_NAME = example`.\"),\n        \"outs\": attr.string_list(default = [\"html\"], allow_empty = False, doc = \"\"\"The output folders to keep. If only the html outputs is of interest, the default value will do. Otherwise, a list of folders to keep is expected (e.g. `[\"html\", \"latex\"]`).\"\"\"),\n        \"doxyfile_template\": attr.label(\n            allow_single_file = True,\n            default = Label(\"@doxygen//:Doxyfile.template\"),\n            doc = \"\"\"The template file to use to generate the Doxyfile. You can provide your own or use the default one. \nThe following substitutions are available: \n- `# {{INPUT}}`: Subpackage directory in the sandbox.\n- `# {{DOT_PATH}}`: Indicate to doxygen the location of the `dot_executable`\n- `# {{ADDITIONAL PARAMETERS}}`: Additional parameters given in the `configurations` attribute.\n- `# {{OUTPUT DIRECTORY}}`: The directory provided in the `outs` attribute.\n\"\"\",\n        ),\n        \"dot_executable\": attr.label(\n            executable = True,\n            cfg = \"exec\",\n            allow_single_file = True,\n            doc = \"The dot executable to use. Must refer to an executable file.\",\n        ),\n        \"doxygen_extra_args\": attr.string_list(default = [], doc = \"Extra arguments to pass to the doxygen executable.\"),\n        \"_executable\": attr.label(\n            executable = True,\n            cfg = \"exec\",\n            allow_single_file = True,\n            default = Label(\"@doxygen//:executable\"),\n            doc = \"The doxygen executable to use. Must refer to an executable file.\",\n        ),\n    },\n)\n\ndef doxygen(\n        name,\n        srcs,\n        project_name = None,\n        project_brief = None,\n        project_number = None,\n        project_logo = None,\n        project_icon = None,\n        use_mdfile_as_mainpage = None,\n        extract_private = None,\n        html_footer = None,\n        html_header = None,\n        filter_patterns = [],\n        use_mathjax = None,\n        html_extra_stylesheet = [],\n        html_extra_files = [],\n        html_colorstyle = None,\n        aliases = [],\n        have_dot = None,\n        dot_image_format = None,\n        dot_transparent = None,\n        disable_index = None,\n        full_sidebar = None,\n        generate_treeview = None,\n        javadoc_autobrief = None,\n        builtin_stl_support = None,\n        hide_undoc_members = None,\n        hide_in_body_docs = None,\n        exclude_symbols = [],\n        example_path = None,\n        dot_executable = None,\n        configurations = [],\n        doxyfile_template = \"@doxygen//:Doxyfile.template\",\n        doxygen_extra_args = [],\n        outs = [\"html\"],\n        **kwargs):\n    \"\"\"\n    Generates documentation using Doxygen.\n\n    ### Example\n\n    ```starlark\n    # MODULE.bazel file\n    bazel_dep(name = \"rules_doxygen\", dev_dependency = True)\n    doxygen_extension = use_extension(\"@rules_doxygen//:extensions.bzl\", \"doxygen_extension\")\n    use_repo(doxygen_extension, \"doxygen\")\n    ```\n\n    ```starlark\n    # BUILD.bazel file\n    load(\"@doxygen//:doxygen.bzl\", \"doxygen\")\n\n    doxygen(\n        name = \"doxygen\",\n        srcs = glob([\n            \"*.h\",\n            \"*.cpp\",\n        ]),\n        project_brief = \"Example project for doxygen\",\n        project_name = \"example\",\n    )\n    ```\n\n    Args:\n        name: A name for the target.\n        srcs: A list of source files to generate documentation for.\n        project_name: The name of the project.\n        project_brief: A brief description of the project.\n        project_number: The version number of the project.\n        project_logo: The path to the project logo.\n        project_icon: The path to the project icon.\n        use_mdfile_as_mainpage: The path to the markdown file to use as the main page.\n        extract_private: Whether to extract private members.\n        html_footer: The path to the HTML footer file.\n        html_header: The path to the HTML header file.\n        filter_patterns: A list of filter patterns. Enables alteration of the input files before they are parsed by doxygen.\n        use_mathjax: Whether to use MathJax.\n        html_extra_stylesheet: A list of extra stylesheets.\n        html_extra_files: A list of extra files.\n        html_colorstyle: The color style to use for HTML.\n        aliases: A list of aliases.\n        have_dot: Whether to use dot.\n        dot_image_format: The image format to use for dot.\n        dot_transparent: Whether to use transparent backgrounds for dot.\n        disable_index: Whether to disable the index.\n        full_sidebar: Whether to use a full sidebar.\n        generate_treeview: Whether to generate a tree view.\n        javadoc_autobrief: Whether to use Javadoc-style auto brief.\n        builtin_stl_support: Whether to support the built-in standard library.\n        hide_undoc_members: Whether to hide undocumented members.\n        hide_in_body_docs: Whether to hide in body docs.\n        exclude_symbols: A list of symbols to exclude.\n        example_path: The path to the examples. They must be added to the source files.\n        dot_executable: Label of the doxygen executable. Make sure it is also added to the `srcs` of the macro \n        configurations: A list of additional configuration parameters to pass to Doxygen.\n        doxyfile_template: The template file to use to generate the Doxyfile.\n            The following substitutions are available:<br>\n            - `# {{INPUT}}`: Subpackage directory in the sandbox.<br>\n            - `# {{ADDITIONAL PARAMETERS}}`: Additional parameters given in the `configurations` attribute.<br>\n            - `# {{OUTPUT DIRECTORY}}`: The directory provided in the `outs` attribute.\n        doxygen_extra_args: Extra arguments to pass to the doxygen executable.\n        outs: The output folders bazel will keep. If only the html outputs is of interest, the default value will do.\n             otherwise, a list of folders to keep is expected (e.g. [\"html\", \"latex\"]).\n        **kwargs: Additional arguments to pass to the rule (e.g. `visibility = [\"//visibility:public\"], tags = [\"manual\"]`)\n    \"\"\"\n    if not configurations:\n        configurations = []\n    if project_name != None:\n        configurations.append(\"PROJECT_NAME = %s\" % project_name)\n    if project_brief != None:\n        configurations.append(\"PROJECT_BRIEF = %s\" % project_brief)\n    if project_number != None:\n        configurations.append(\"PROJECT_NUMBER = %s\" % project_number)\n    if project_logo != None:\n        configurations.append(\"PROJECT_LOGO = %s\" % project_logo)\n    if project_icon != None:\n        configurations.append(\"PROJECT_ICON = %s\" % project_icon)\n    if use_mdfile_as_mainpage != None:\n        configurations.append(\"USE_MDFILE_AS_MAINPAGE = %s\" % use_mdfile_as_mainpage)\n    if extract_private != None:\n        if type(extract_private) == type(True):\n            extract_private = \"YES\" if extract_private else \"NO\"\n        configurations.append(\"EXTRACT_PRIVATE = %s\" % extract_private)\n    if html_colorstyle != None:\n        configurations.append(\"HTML_COLORSTYLE = %s\" % html_colorstyle)\n    if html_footer != None:\n        configurations.append(\"HTML_FOOTER = %s\" % html_footer)\n    if html_header != None:\n        configurations.append(\"HTML_HEADER = %s\" % html_header)\n    if filter_patterns:\n        configurations.append(\"FILTER_PATTERNS = %s\" % \" \".join(filter_patterns))\n    if use_mathjax != None:\n        if type(use_mathjax) == type(True):\n            use_mathjax = \"YES\" if use_mathjax else \"NO\"\n        configurations.append(\"USE_MATHJAX = %s\" % use_mathjax)\n    if html_extra_stylesheet:\n        configurations.append(\"HTML_EXTRA_STYLESHEET = %s\" % \" \".join(html_extra_stylesheet))\n    if html_extra_files:\n        configurations.append(\"HTML_EXTRA_FILES = %s\" % \" \".join(html_extra_files))\n    if aliases:\n        configurations.append(\"ALIASES = %s\" % \" \".join(aliases))\n    if have_dot != None:\n        if type(have_dot) == type(True):\n            have_dot = \"YES\" if have_dot else \"NO\"\n        configurations.append(\"HAVE_DOT = %s\" % have_dot)\n    if dot_image_format != None:\n        configurations.append(\"DOT_IMAGE_FORMAT = %s\" % dot_image_format)\n    if dot_transparent != None:\n        if type(dot_transparent) == type(True):\n            dot_transparent = \"YES\" if dot_transparent else \"NO\"\n        configurations.append(\"DOT_TRANSPARENT = %s\" % dot_transparent)\n    if disable_index != None:\n        if type(disable_index) == type(True):\n            disable_index = \"YES\" if disable_index else \"NO\"\n        configurations.append(\"DISABLE_INDEX = %s\" % disable_index)\n    if full_sidebar != None:\n        if type(full_sidebar) == type(True):\n            full_sidebar = \"YES\" if full_sidebar else \"NO\"\n        configurations.append(\"FULL_SIDEBAR = %s\" % full_sidebar)\n    if generate_treeview != None:\n        if type(generate_treeview) == type(True):\n            generate_treeview = \"YES\" if generate_treeview else \"NO\"\n        configurations.append(\"GENERATE_TREEVIEW = %s\" % generate_treeview)\n    if javadoc_autobrief != None:\n        if type(javadoc_autobrief) == type(True):\n            javadoc_autobrief = \"YES\" if javadoc_autobrief else \"NO\"\n        configurations.append(\"JAVADOC_AUTOBRIEF = %s\" % javadoc_autobrief)\n    if builtin_stl_support != None:\n        if type(builtin_stl_support) == type(True):\n            builtin_stl_support = \"YES\" if builtin_stl_support else \"NO\"\n        configurations.append(\"BUILTIN_STL_SUPPORT = %s\" % builtin_stl_support)\n    if hide_undoc_members != None:\n        if type(hide_undoc_members) == type(True):\n            hide_undoc_members = \"YES\" if hide_undoc_members else \"NO\"\n        configurations.append(\"HIDE_UNDOC_MEMBERS = %s\" % hide_undoc_members)\n    if hide_in_body_docs != None:\n        if type(hide_in_body_docs) == type(True):\n            hide_in_body_docs = \"YES\" if hide_in_body_docs else \"NO\"\n        configurations.append(\"HIDE_IN_BODY_DOCS = %s\" % hide_in_body_docs)\n    if exclude_symbols:\n        configurations.append(\"EXCLUDE_SYMBOLS = %s\" % \" \".join(exclude_symbols))\n    if example_path != None:\n        configurations.append(\"EXAMPLE_PATH = %s\" % example_path)\n\n    _doxygen(\n        name = name,\n        srcs = srcs,\n        outs = outs,\n        configurations = configurations,\n        doxyfile_template = doxyfile_template,\n        doxygen_extra_args = doxygen_extra_args,\n        dot_executable = dot_executable,\n        **kwargs\n    )\n'"
              ],
              "strip_prefix": "doxygen-1.11.0"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_doxygen~",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_doxygen~",
            "rules_doxygen",
            "rules_doxygen~"
          ]
        ]
      }
    },
    "@@rules_flex~//flex/extensions:flex_repository_ext.bzl%flex_repository_ext": {
      "general": {
        "bzlTransitiveDigest": "fsokVt4OQxtP/gV71beKC6gUH5P9kC27TOkNb7+Dj8g=",
        "usagesDigest": "rAd5wcb4PSj6bw8v0JLgETOewhaESphyC3vhCsOmMjM=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "flex": {
            "bzlFile": "@@rules_flex~//flex/rules:flex_toolchain_repository.bzl",
            "ruleClassName": "flex_toolchain_repository",
            "attributes": {
              "flex_repository": "@flex_v2.6.4__cfg0A7AA425"
            }
          },
          "flex_v2.6.4__cfg0A7AA425": {
            "bzlFile": "@@rules_flex~//flex/rules:flex_repository.bzl",
            "ruleClassName": "flex_repository",
            "attributes": {
              "version": "2.6.4",
              "extra_copts": [
                "-O3"
              ]
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "flex"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@rules_flex~//flex/internal:default_toolchain_ext.bzl%default_toolchain_ext": {
      "general": {
        "bzlTransitiveDigest": "fn+aX2vKsiaNLj3QtNfsRcI8fiATDtxAayRTJFGJkNI=",
        "usagesDigest": "K0ChaFqqamXHtPFFjEXpS4d978I5dWaIJ5k+Xu7Xo/c=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "flex": {
            "bzlFile": "@@rules_flex~//flex/rules:flex_toolchain_repository.bzl",
            "ruleClassName": "flex_toolchain_repository",
            "attributes": {
              "flex_repository": "@flex_v2.6.4"
            }
          },
          "flex_v2.6.4": {
            "bzlFile": "@@rules_flex~//flex/rules:flex_repository.bzl",
            "ruleClassName": "flex_repository",
            "attributes": {
              "version": "2.6.4"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "flex"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@rules_foreign_cc~//foreign_cc:extensions.bzl%tools": {
      "general": {
        "bzlTransitiveDigest": "f6RBwbUKS3C3FNQJAYhIWLiHaTLQDr1nKJidK7iQTBg=",
        "usagesDigest": "rcono0M8vAWDAJxsr93rRa5vX8s73ZexMVAKXNZRFTg=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "cmake-3.23.2-linux-aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-linux-aarch64.tar.gz"
              ],
              "sha256": "f2654bf780b53f170bbbec44d8ac67d401d24788e590faa53036a89476efa91e",
              "strip_prefix": "cmake-3.23.2-linux-aarch64",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_bin\",\n    srcs = [\"bin/cmake\"],\n)\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"**/* *\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake\",\n    target = \":cmake_data\",\n    env = {\"CMAKE\": \"$(execpath :cmake_bin)\"},\n    tools = [\":cmake_bin\"],\n)\n"
            }
          },
          "rules_foreign_cc_framework_toolchain_macos": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository",
            "attributes": {
              "commands_src": "@rules_foreign_cc//foreign_cc/private/framework/toolchains:macos_commands.bzl",
              "exec_compatible_with": [
                "@platforms//os:macos"
              ]
            }
          },
          "ninja_1.12.1_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-win.zip"
              ],
              "sha256": "f550fec705b6d6ff58f2db3c374c2277a37691678d6aba463adcbb129108467a",
              "strip_prefix": "",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"ninja_bin\",\n    srcs = [\"ninja.exe\"],\n)\n\nnative_tool_toolchain(\n    name = \"ninja_tool\",\n    env = {\"NINJA\": \"$(execpath :ninja_bin)\"},\n    path = \"$(execpath :ninja_bin)\",\n    target = \":ninja_bin\",\n)\n"
            }
          },
          "gnumake_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "filegroup(\n    name = \"all_srcs\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "dd16fb1d67bfab79a72f5e8390735c49e3e8e70b4945a15ab1f81ddb78658fb3",
              "strip_prefix": "make-4.4.1",
              "urls": [
                "https://mirror.bazel.build/ftpmirror.gnu.org/gnu/make/make-4.4.1.tar.gz",
                "http://ftpmirror.gnu.org/gnu/make/make-4.4.1.tar.gz"
              ]
            }
          },
          "gettext_runtime": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "\ncc_import(\n    name = \"gettext_runtime\",\n    shared_library = \"bin/libintl-8.dll\",\n    visibility = [\"//visibility:public\"],\n)\n        ",
              "sha256": "1f4269c0e021076d60a54e98da6f978a3195013f6de21674ba0edbc339c5b079",
              "urls": [
                "https://mirror.bazel.build/download.gnome.org/binaries/win64/dependencies/gettext-runtime_0.18.1.1-2_win64.zip",
                "https://download.gnome.org/binaries/win64/dependencies/gettext-runtime_0.18.1.1-2_win64.zip"
              ]
            }
          },
          "cmake_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "filegroup(\n    name = \"all_srcs\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "f316b40053466f9a416adf981efda41b160ca859e97f6a484b447ea299ff26aa",
              "strip_prefix": "cmake-3.23.2",
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2.tar.gz"
              ],
              "patches": [
                "@@rules_foreign_cc~//toolchains:cmake-c++11.patch"
              ]
            }
          },
          "bazel_skylib": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz",
                "https://github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz"
              ],
              "sha256": "f7be3474d42aae265405a592bb7da8e171919d74c16f082a5457840f06054728"
            }
          },
          "cmake-3.23.2-macos-universal": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-macos-universal.tar.gz"
              ],
              "sha256": "853a0f9af148c5ef47282ffffee06c4c9f257be2635936755f39ca13c3286c88",
              "strip_prefix": "cmake-3.23.2-macos-universal/CMake.app/Contents",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_bin\",\n    srcs = [\"bin/cmake\"],\n)\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"**/* *\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake\",\n    target = \":cmake_data\",\n    env = {\"CMAKE\": \"$(execpath :cmake_bin)\"},\n    tools = [\":cmake_bin\"],\n)\n"
            }
          },
          "ninja_1.12.1_linux-aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-linux-aarch64.zip"
              ],
              "sha256": "5c25c6570b0155e95fce5918cb95f1ad9870df5768653afe128db822301a05a1",
              "strip_prefix": "",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"ninja_bin\",\n    srcs = [\"ninja\"],\n)\n\nnative_tool_toolchain(\n    name = \"ninja_tool\",\n    env = {\"NINJA\": \"$(execpath :ninja_bin)\"},\n    path = \"$(execpath :ninja_bin)\",\n    target = \":ninja_bin\",\n)\n"
            }
          },
          "meson_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "exports_files([\"meson.py\"])\n\nfilegroup(\n    name = \"runtime\",\n    srcs = glob([\"mesonbuild/**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "567e533adf255de73a2de35049b99923caf872a455af9ce03e01077e0d384bed",
              "strip_prefix": "meson-1.5.1",
              "urls": [
                "https://mirror.bazel.build/github.com/mesonbuild/meson/releases/download/1.5.1/meson-1.5.1.tar.gz",
                "https://github.com/mesonbuild/meson/releases/download/1.5.1/meson-1.5.1.tar.gz"
              ]
            }
          },
          "rules_foreign_cc_framework_toolchain_freebsd": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository",
            "attributes": {
              "commands_src": "@rules_foreign_cc//foreign_cc/private/framework/toolchains:freebsd_commands.bzl",
              "exec_compatible_with": [
                "@platforms//os:freebsd"
              ]
            }
          },
          "rules_foreign_cc_framework_toolchain_linux": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository",
            "attributes": {
              "commands_src": "@rules_foreign_cc//foreign_cc/private/framework/toolchains:linux_commands.bzl",
              "exec_compatible_with": [
                "@platforms//os:linux"
              ]
            }
          },
          "rules_python": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "84aec9e21cc56fbc7f1335035a71c850d1b9b5cc6ff497306f84cced9a769841",
              "strip_prefix": "rules_python-0.23.1",
              "url": "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.23.1.tar.gz"
            }
          },
          "ninja_1.12.1_mac": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-mac.zip"
              ],
              "sha256": "89a287444b5b3e98f88a945afa50ce937b8ffd1dcc59c555ad9b1baf855298c9",
              "strip_prefix": "",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"ninja_bin\",\n    srcs = [\"ninja\"],\n)\n\nnative_tool_toolchain(\n    name = \"ninja_tool\",\n    env = {\"NINJA\": \"$(execpath :ninja_bin)\"},\n    path = \"$(execpath :ninja_bin)\",\n    target = \":ninja_bin\",\n)\n"
            }
          },
          "pkgconfig_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "filegroup(\n    name = \"all_srcs\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "6fc69c01688c9458a57eb9a1664c9aba372ccda420a02bf4429fe610e7e7d591",
              "strip_prefix": "pkg-config-0.29.2",
              "patches": [
                "@@rules_foreign_cc~//toolchains:pkgconfig-detectenv.patch",
                "@@rules_foreign_cc~//toolchains:pkgconfig-makefile-vc.patch",
                "@@rules_foreign_cc~//toolchains:pkgconfig-builtin-glib-int-conversion.patch"
              ],
              "urls": [
                "https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz",
                "https://mirror.bazel.build/pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"
              ]
            }
          },
          "ninja_build_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "filegroup(\n    name = \"all_srcs\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "integrity": "sha256-ghvf9Io/aDvEuztvC1/nstZHz2XVKutjMoyRpsbfKFo=",
              "strip_prefix": "ninja-1.12.1",
              "urls": [
                "https://mirror.bazel.build/github.com/ninja-build/ninja/archive/v1.12.1.tar.gz",
                "https://github.com/ninja-build/ninja/archive/v1.12.1.tar.gz"
              ]
            }
          },
          "glib_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "\ncc_import(\n    name = \"msvc_hdr\",\n    hdrs = [\"msvc_recommended_pragmas.h\"],\n    visibility = [\"//visibility:public\"],\n)\n        ",
              "sha256": "bc96f63112823b7d6c9f06572d2ad626ddac7eb452c04d762592197f6e07898e",
              "strip_prefix": "glib-2.26.1",
              "urls": [
                "https://mirror.bazel.build/download.gnome.org/sources/glib/2.26/glib-2.26.1.tar.gz",
                "https://download.gnome.org/sources/glib/2.26/glib-2.26.1.tar.gz"
              ]
            }
          },
          "ninja_1.12.1_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-linux.zip"
              ],
              "sha256": "6f98805688d19672bd699fbbfa2c2cf0fc054ac3df1f0e6a47664d963d530255",
              "strip_prefix": "",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"ninja_bin\",\n    srcs = [\"ninja\"],\n)\n\nnative_tool_toolchain(\n    name = \"ninja_tool\",\n    env = {\"NINJA\": \"$(execpath :ninja_bin)\"},\n    path = \"$(execpath :ninja_bin)\",\n    target = \":ninja_bin\",\n)\n"
            }
          },
          "cmake-3.23.2-windows-x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-windows-x86_64.zip"
              ],
              "sha256": "2329387f3166b84c25091c86389fb891193967740c9bcf01e7f6d3306f7ffda0",
              "strip_prefix": "cmake-3.23.2-windows-x86_64",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_bin\",\n    srcs = [\"bin/cmake.exe\"],\n)\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"**/* *\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake.exe\",\n    target = \":cmake_data\",\n    env = {\"CMAKE\": \"$(execpath :cmake_bin)\"},\n    tools = [\":cmake_bin\"],\n)\n"
            }
          },
          "glib_runtime": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "\nexports_files(\n    [\n        \"bin/libgio-2.0-0.dll\",\n        \"bin/libglib-2.0-0.dll\",\n        \"bin/libgmodule-2.0-0.dll\",\n        \"bin/libgobject-2.0-0.dll\",\n        \"bin/libgthread-2.0-0.dll\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n        ",
              "sha256": "88d857087e86f16a9be651ee7021880b3f7ba050d34a1ed9f06113b8799cb973",
              "urls": [
                "https://mirror.bazel.build/download.gnome.org/binaries/win64/glib/2.26/glib_2.26.1-1_win64.zip",
                "https://download.gnome.org/binaries/win64/glib/2.26/glib_2.26.1-1_win64.zip"
              ]
            }
          },
          "rules_foreign_cc_framework_toolchains": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository_hub",
            "attributes": {}
          },
          "bazel_features": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "ba1282c1aa1d1fffdcf994ab32131d7c7551a9bc960fbf05f42d55a1b930cbfb",
              "strip_prefix": "bazel_features-1.15.0",
              "url": "https://github.com/bazel-contrib/bazel_features/releases/download/v1.15.0/bazel_features-v1.15.0.tar.gz"
            }
          },
          "ninja_1.12.1_toolchains": {
            "bzlFile": "@@rules_foreign_cc~//toolchains:prebuilt_toolchains_repository.bzl",
            "ruleClassName": "prebuilt_toolchains_repository",
            "attributes": {
              "repos": {
                "ninja_1.12.1_linux": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "ninja_1.12.1_linux-aarch64": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "ninja_1.12.1_mac": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:macos"
                ],
                "ninja_1.12.1_mac_aarch64": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:macos"
                ],
                "ninja_1.12.1_win": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ]
              },
              "tool": "ninja"
            }
          },
          "glib_dev": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "\nload(\"@rules_cc//cc:defs.bzl\", \"cc_library\")\n\ncc_import(\n    name = \"glib_dev\",\n    hdrs = glob([\"include/**\"]),\n    shared_library = \"@glib_runtime//:bin/libglib-2.0-0.dll\",\n    visibility = [\"//visibility:public\"],\n)\n        ",
              "sha256": "bdf18506df304d38be98a4b3f18055b8b8cca81beabecad0eece6ce95319c369",
              "urls": [
                "https://mirror.bazel.build/download.gnome.org/binaries/win64/glib/2.26/glib-dev_2.26.1-1_win64.zip",
                "https://download.gnome.org/binaries/win64/glib/2.26/glib-dev_2.26.1-1_win64.zip"
              ]
            }
          },
          "cmake_3.23.2_toolchains": {
            "bzlFile": "@@rules_foreign_cc~//toolchains:prebuilt_toolchains_repository.bzl",
            "ruleClassName": "prebuilt_toolchains_repository",
            "attributes": {
              "repos": {
                "cmake-3.23.2-linux-aarch64": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "cmake-3.23.2-linux-x86_64": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "cmake-3.23.2-macos-universal": [
                  "@platforms//os:macos"
                ],
                "cmake-3.23.2-windows-i386": [
                  "@platforms//cpu:x86_32",
                  "@platforms//os:windows"
                ],
                "cmake-3.23.2-windows-x86_64": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ]
              },
              "tool": "cmake"
            }
          },
          "cmake-3.23.2-windows-i386": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-windows-i386.zip"
              ],
              "sha256": "6a4fcd6a2315b93cb23c93507efccacc30c449c2bf98f14d6032bb226c582e07",
              "strip_prefix": "cmake-3.23.2-windows-i386",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_bin\",\n    srcs = [\"bin/cmake.exe\"],\n)\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"**/* *\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake.exe\",\n    target = \":cmake_data\",\n    env = {\"CMAKE\": \"$(execpath :cmake_bin)\"},\n    tools = [\":cmake_bin\"],\n)\n"
            }
          },
          "cmake-3.23.2-linux-x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-linux-x86_64.tar.gz"
              ],
              "sha256": "aaced6f745b86ce853661a595bdac6c5314a60f8181b6912a0a4920acfa32708",
              "strip_prefix": "cmake-3.23.2-linux-x86_64",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_bin\",\n    srcs = [\"bin/cmake\"],\n)\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"**/* *\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake\",\n    target = \":cmake_data\",\n    env = {\"CMAKE\": \"$(execpath :cmake_bin)\"},\n    tools = [\":cmake_bin\"],\n)\n"
            }
          },
          "ninja_1.12.1_mac_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-mac.zip"
              ],
              "sha256": "89a287444b5b3e98f88a945afa50ce937b8ffd1dcc59c555ad9b1baf855298c9",
              "strip_prefix": "",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"ninja_bin\",\n    srcs = [\"ninja\"],\n)\n\nnative_tool_toolchain(\n    name = \"ninja_tool\",\n    env = {\"NINJA\": \"$(execpath :ninja_bin)\"},\n    path = \"$(execpath :ninja_bin)\",\n    target = \":ninja_bin\",\n)\n"
            }
          },
          "rules_foreign_cc_framework_toolchain_windows": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository",
            "attributes": {
              "commands_src": "@rules_foreign_cc//foreign_cc/private/framework/toolchains:windows_commands.bzl",
              "exec_compatible_with": [
                "@platforms//os:windows"
              ]
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_foreign_cc~",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_foreign_cc~",
            "rules_foreign_cc",
            "rules_foreign_cc~"
          ]
        ]
      }
    },
    "@@rules_m4~//m4/internal:default_toolchain_ext.bzl%default_toolchain_ext": {
      "general": {
        "bzlTransitiveDigest": "rm6OAtIMR6n0t1X9wBVXucwCa6wqpIoqqh+kSzHNOg4=",
        "usagesDigest": "UcxA/XigtmDpzRbmdFAY0WoatxHYiCgjCro6UZD+jvo=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "m4_v1.4.18": {
            "bzlFile": "@@rules_m4~//m4/rules:m4_repository.bzl",
            "ruleClassName": "m4_repository",
            "attributes": {
              "version": "1.4.18"
            }
          },
          "m4": {
            "bzlFile": "@@rules_m4~//m4/rules:m4_toolchain_repository.bzl",
            "ruleClassName": "m4_toolchain_repository",
            "attributes": {
              "m4_repository": "@m4_v1.4.18"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "m4"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO",
          "reproducible": false
        },
        "recordedRepoMappingEntries": []
      }
    }
  }
}
