load("@pypi//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("@rules_python//python:packaging.bzl", "py_wheel")
load("//tools:dlinear.bzl", "DLINEAR_AUTHOR", "DLINEAR_AUTHOR_EMAIL", "DLINEAR_CLASSIFIERS", "DLINEAR_DESCRIPTION", "DLINEAR_HOMEPAGE", "DLINEAR_LICENSE", "DLINEAR_SOURCE", "DLINEAR_TRACKER", "DLINEAR_VERSION", "dlinear_pybind_extension")

dlinear_pybind_extension(
    name = "_pydlinear",
    srcs = [
        "lib.cpp",
        "pydlinear.cpp",
        "pydlinear.h",
        "solver.cpp",
        "symbolic.cpp",
        "util.cpp",
    ],
    linkstatic = select({
        "//tools:static_build": True,
        "//conditions:default": False,
    }),
    deps = [
        "//dlinear:version",
        "//dlinear/libs:gmp",
        "//dlinear/solver",
        "//dlinear/solver:solver_output",
        "//dlinear/symbolic",
        "//dlinear/util:argparser",
        "//dlinear/util:config",
    ],
)

py_library(
    name = "pydlinear_lib",
    srcs = [
        "__init__.py",
        "__main__.py",
    ],
    data = [":_pydlinear.so"],
    imports = ["."],
    srcs_version = "PY3",
)

py_binary(
    name = "pydlinear",
    srcs = ["__main__.py"],
    imports = ["."],
    main = "__main__.py",
    python_version = "PY3",
    deps = [
        ":pydlinear_lib",
    ],
)

py_binary(
    name = "stubgen_bin",
    srcs = ["_stubgen.py"],
    imports = ["."],
    main = "_stubgen.py",
    python_version = "PY3",
    deps = [
        requirement("pybind11_stubgen"),
        ":pydlinear_lib",
    ],
)

genrule(
    name = "stubgen",
    outs = [
        "_pydlinear.pyi",
        "__init__.pyi",
        "py.typed",
    ],
    cmd = "$(location :stubgen_bin) $(OUTS)",
    tools = [":stubgen_bin"],
)

filegroup(
    name = "pydlinear_files",
    srcs = [
        "py.typed",
        ":_pydlinear",
        ":pydlinear_lib",
        ":stubgen",
    ],
)

py_wheel(
    name = "pydlinear_wheel",
    abi = "$(PYTHON_ABI_TAG)",
    author = DLINEAR_AUTHOR,
    author_email = DLINEAR_AUTHOR_EMAIL,
    classifiers = DLINEAR_CLASSIFIERS,
    description_content_type = "text/markdown",
    description_file = "//:README.md",
    distribution = "pydlinear",
    entry_points = {
        "console_scripts": ["pydlinear = pydlinear.__main__:main"],
    },
    homepage = DLINEAR_HOMEPAGE,
    license = DLINEAR_LICENSE,
    platform = select({
        "@bazel_tools//src/conditions:windows_x64": "win_amd64",
        "@bazel_tools//src/conditions:windows_arm64": "win_arm64",
        "@bazel_tools//src/conditions:darwin_x86_64": "macosx_12_0_x86_64",
        "@bazel_tools//src/conditions:darwin_arm64": "macosx_12_0_arm64",
        "@bazel_tools//src/conditions:linux_x86_64": "linux_x86_64",
        "@bazel_tools//src/conditions:linux_aarch64": "linux_aarch64",
    }),
    project_urls = {
        "Source": DLINEAR_SOURCE,
        "Tracker": DLINEAR_TRACKER,
    },
    python_tag = "$(PYTHON_TAG)",
    summary = DLINEAR_DESCRIPTION,
    toolchains = ["//tools:make_var_substitution"],
    version = DLINEAR_VERSION,
    deps = [":pydlinear_files"],
)
