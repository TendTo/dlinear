load("//tools:cpplint.bzl", "cpplint")
load("//tools:dlinear.bzl", "dlinear_cc_library")

package(default_visibility = [
    "//dlinear:__subpackages__",
    "//pydlinear:__subpackages__",
    "//test:__subpackages__",
])

dlinear_cc_library(
    name = "prefix_printer",
    srcs = ["PrefixPrinter.cpp"],
    hdrs = ["PrefixPrinter.h"],
    deps = [":symbolic"],
)

dlinear_cc_library(
    name = "symbolic",
    srcs = ["symbolic.cpp"],
    hdrs = ["symbolic.h"],
    deps = [
        ":literal",
        "//dlinear/util:exception",
        "//dlinear/util:logging",
        "//third_party/com_github_robotlocomotion_drake:drake_symbolic",
    ],
)

dlinear_cc_library(
    name = "formula_visitor",
    hdrs = ["FormulaVisitor.h"],
    deps = [
        ":symbolic",
        "//dlinear/util:stats",
    ],
)

dlinear_cc_library(
    name = "linear_formula_flattener",
    srcs = ["LinearFormulaFlattener.cpp"],
    hdrs = ["LinearFormulaFlattener.h"],
    deps = [
        ":symbolic",
        "//dlinear/util:config",
    ],
)

dlinear_cc_library(
    name = "literal",
    srcs = ["literal.cpp"],
    hdrs = ["literal.h"],
    deps = [
        "//dlinear/util:logging",
        "//third_party/com_github_robotlocomotion_drake:drake_symbolic",
    ],
)

dlinear_cc_library(
    name = "environment",
    hdrs = ["environment.h"],
    deps = [
        "//dlinear/util:logging",
        "//third_party/com_github_robotlocomotion_drake:drake_symbolic",
    ],
)

dlinear_cc_library(
    name = "expression_evaluator",
    srcs = ["ExpressionEvaluator.cpp"],
    hdrs = ["ExpressionEvaluator.h"],
    deps = [
        ":symbolic",
        "//dlinear/util:box",
        "//dlinear/util:exception",
        "//dlinear/util:logging",
    ],
)

dlinear_cc_library(
    name = "nnfizier",
    srcs = ["Nnfizer.cpp"],
    hdrs = ["Nnfizer.h"],
    deps = [
        ":symbolic",
        "//dlinear/util:logging",
    ],
)

dlinear_cc_library(
    name = "cnfizer",
    srcs = ["NaiveCnfizer.cpp"],
    hdrs = ["NaiveCnfizer.h"],
    deps = [
        ":nnfizier",
        ":symbolic",
        "//dlinear/util:logging",
    ],
)

dlinear_cc_library(
    name = "if_then_else_eliminator",
    srcs = ["IfThenElseEliminator.cpp"],
    hdrs = ["IfThenElseEliminator.h"],
    deps = [
        ":nnfizier",
        ":symbolic",
        "//dlinear/util:logging",
        "//dlinear/util:stats",
        "//dlinear/util:timer",
    ],
)

dlinear_cc_library(
    name = "predicate_abstractor",
    srcs = ["PredicateAbstractor.cpp"],
    hdrs = ["PredicateAbstractor.h"],
    deps = [
        ":formula_visitor",
        ":linear_formula_flattener",
        ":symbolic",
        "//dlinear/util:config",
        "//dlinear/util:logging",
        "//dlinear/util:stats",
        "//dlinear/util:timer",
    ],
)

dlinear_cc_library(
    name = "plaisted_greenbaum_cnfizer",
    srcs = ["PlaistedGreenbaumCnfizer.cpp"],
    hdrs = ["PlaistedGreenbaumCnfizer.h"],
    deps = [
        ":cnfizer",
        ":formula_visitor",
        ":nnfizier",
        ":symbolic",
        "//dlinear/util:exception",
        "//dlinear/util:logging",
        "//dlinear/util:stats",
        "//dlinear/util:timer",
    ],
)

dlinear_cc_library(
    name = "tseitin_cnfizer",
    srcs = ["TseitinCnfizer.cpp"],
    hdrs = ["TseitinCnfizer.h"],
    deps = [
        ":cnfizer",
        ":formula_visitor",
        ":symbolic",
        "//dlinear/util:exception",
        "//dlinear/util:logging",
        "//dlinear/util:stats",
        "//dlinear/util:timer",
    ],
)

cpplint()
