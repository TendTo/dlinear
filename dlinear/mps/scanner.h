/**
 * @file scanner.h
 * @author dlinear
 * @date 22 Aug 2023
 * @copyright 2023 dlinear
 * @brief Scanner utility class.
 *
 * This class extends from the MpsFlexLexer class generated by Flex. It
 * provides a class named MpsScanner used to parse the file using the Flex
 * API.
 */
#ifndef DLINEAR_SMT2_SCANNER_H_
#define DLINEAR_SMT2_SCANNER_H_

// Flex expects the signature of yylex to be defined in the macro YY_DECL, and
// the C++ parser expects it to be declared. We can factor both as follows.

#ifndef YY_DECL

#define YY_DECL                                                \
  dlinear::MpsParser::token_type dlinear::MpsScanner::lex( \
      dlinear::MpsParser::semantic_type *yylval,               \
      dlinear::MpsParser::location_type *yylloc)
#endif

#ifndef __FLEX_LEXER_H
#define yyFlexLexer MpsFlexLexer
#include <FlexLexer.h>
#undef yyFlexLexer
#endif

// The following include should come first before parser.yy.hh.
// Do not alpha-sort them.
#include "dlinear/mps/parser.yy.hpp"

namespace dlinear
{

  /**
   * MpsScanner is a derived class to add some extra function to the scanner
   * class. Flex itself creates a class named yyFlexLexer, which is renamed using
   * macros to ExampleFlexLexer. However we change the context of the generated
   * yylex() function to be contained within the MpsScanner class. This is
   * required because the yylex() defined in ExampleFlexLexer has no parameters.
   */
  class MpsScanner : public MpsFlexLexer
  {
  public:
    /**
     * Create a new scanner object. The streams arg_yyin and arg_yyout default
     * to cin and cout, but that assignment is only made when initializing in
     * yylex().
     */
    explicit MpsScanner(std::istream *arg_yyin = nullptr, std::ostream *arg_yyout = nullptr);

    MpsScanner(const MpsScanner &) = delete;
    MpsScanner(MpsScanner &&) = delete;
    MpsScanner &operator=(const MpsScanner &) = delete;
    MpsScanner &operator=(MpsScanner &&) = delete;

    /** Required for virtual functions */
    ~MpsScanner() override;

    /**
     * This is the main lexing function. It is generated by flex according to
     * the macro declaration YY_DECL above. The generated bison parser then
     * calls this virtual function to fetch new tokens.
     */
    virtual MpsParser::token_type lex(MpsParser::semantic_type *yylval, MpsParser::location_type *yylloc);

    /** Enable debug output (via arg_yyout) if compiled into the scanner. */
    void set_debug(bool b);
  };

} // namespace dlinear

#endif // DLINEAR_SMT2_SCANNER_H_
