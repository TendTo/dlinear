load("//tools:dlinear.bzl", "dlinear_cc_library")
load("//tools:cpplint.bzl", "cpplint")
load("//tools/lexyacc:lexyacc.bzl", "gen_lex", "gen_yacc")

package(default_visibility = [
    "//benchmark:__subpackages__",
    "//dlinear:__subpackages__",
    "//pydlinear:__subpackages__",
    "//test:__subpackages__",
])

gen_lex(
    name = "scanner",
    src = "scanner.ll",
    hdr = "scanner.h",
    source_out = "scanner.ll.cpp",
    visibility = ["//visibility:private"],
)

gen_yacc(
    name = "parser",
    src = "parser.yy",
    extra_outs = ["location.hh"],
    header_out = "parser.yy.hpp",
    source_out = "parser.yy.cpp",
    visibility = ["//visibility:private"],
)

dlinear_cc_library(
    name = "sort",
    srcs = ["sort.cpp"],
    hdrs = ["sort.h"],
    deps = [
        "//dlinear/symbolic",
        "//dlinear/util:exception",
    ],
)

dlinear_cc_library(
    name = "term",
    srcs = ["Term.cpp"],
    hdrs = ["Term.h"],
    deps = [
        "//dlinear/symbolic",
        "//dlinear/util:exception",
        "//dlinear/util:logging",
    ],
)

dlinear_cc_library(
    name = "command",
    srcs = [
        "Command.cpp",
        "CommandCell.cpp",
    ],
    hdrs = [
        "Command.h",
        "CommandCell.h",
    ],
    deps = [
        "//dlinear/solver:logic",
        "//dlinear/symbolic",
    ],
)

dlinear_cc_library(
    name = "smt2",
    srcs = [
        "Driver.cpp",
        ":parser",
        ":scanner",
    ],
    hdrs = [
        "Driver.h",
    ],
    deps = [
        ":sort",
        ":term",
        "//dlinear/solver:context",
        "//dlinear/solver:logic",
        "//dlinear/symbolic",
        "//dlinear/util:box",
        "//dlinear/util:config",
        "//dlinear/util:logging",
        "//dlinear/util:math",
        "//dlinear/util:scoped_structures",
        "@flex_lexer",
        "@tl_optional",
    ],
)

cpplint()
