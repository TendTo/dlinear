load("//tools:cpplint.bzl", "cpplint")
load("//tools:dlinear.bzl", "dlinear_cc_library", "dlinear_srcs")

package(default_visibility = [
    "//dlinear:__subpackages__",
    "//test:__subpackages__",
])

dlinear_srcs(
    name = "srcs",
    subfolder = "solver",
    deps = [
        "//dlinear/solver/sat_solver",
        "//dlinear/solver/theory_solver",
    ],
)

dlinear_cc_library(
    name = "logic",
    srcs = ["Logic.cpp"],
    hdrs = ["Logic.h"],
    implementation_deps = ["//dlinear/util:exception"],
    deps = ["//dlinear/util:logging"],
)

dlinear_cc_library(
    name = "sat_result",
    srcs = ["SatResult.cpp"],
    hdrs = ["SatResult.h"],
    implementation_deps = ["//dlinear/util:exception"],
    deps = ["//dlinear/util:logging"],
)

dlinear_cc_library(
    name = "context",
    srcs = [
        "Context.cpp",
        "ContextImpl.cpp",
        "ContextImpl.h",
    ],
    hdrs = [
        "Context.h",
    ],
    implementation_deps = [
        "//dlinear/solver/sat_solver",
        "//dlinear/solver/theory_solver",
        "//dlinear/solver/theory_solver/qf_lra:bound_implicator",
        "//dlinear/solver/theory_solver/qf_lra:relu_constraint",
        "//dlinear/symbolic:if_then_else_eliminator",
        "//dlinear/util:exception",
        "//dlinear/util:logging",
        "//dlinear/util:stats",
    ],
    deps = [
        ":logic",
        ":sat_result",
        ":solver_output",
        "//dlinear/libs:gmp",
        "//dlinear/solver/theory_solver/qf_lra:lp_result",
        "//dlinear/solver/theory_solver/qf_lra:piecewise_linear_constraint",
        "//dlinear/symbolic",
        "//dlinear/symbolic:literal",
        "//dlinear/symbolic:predicate_abstractor",
        "//dlinear/util:box",
        "//dlinear/util:config",
        "//dlinear/util:scoped_structures",
    ] + select({
        "//tools:pydlinear_build": ["//pydlinear:interrupt"],
        "//conditions:default": [],
    }),
)

dlinear_cc_library(
    name = "solver_output",
    srcs = ["SmtSolverOutput.cpp"],
    hdrs = ["SmtSolverOutput.h"],
    implementation_deps = ["//dlinear/util:exception"],
    visibility = [
        "//benchmark:__subpackages__",
        "//dlinear:__subpackages__",
        "//pydlinear:__subpackages__",
        "//test:__subpackages__",
    ],
    deps = [
        ":sat_result",
        "//dlinear/libs:gmp",
        "//dlinear/solver/theory_solver/qf_lra:lp_result",
        "//dlinear/util:box",
        "//dlinear/util:config",
        "//dlinear/util:stats",
        "//dlinear/util:timer",
    ],
)

dlinear_cc_library(
    name = "solver",
    srcs = ["SmtSolver.cpp"],
    hdrs = ["SmtSolver.h"],
    implementation_deps = [
        "//dlinear/parser/mps",
        "//dlinear/parser/onnx",
        "//dlinear/parser/smt2",
        "//dlinear/parser/vnnlib",
        "//dlinear/util:concepts",
        "//dlinear/util:exception",
        "//dlinear/util:logging",
        "//dlinear/util:timer",
    ],
    visibility = [
        "//benchmark:__subpackages__",
        "//dlinear:__subpackages__",
        "//pydlinear:__subpackages__",
        "//test:__subpackages__",
    ],
    deps = [
        ":context",
        ":solver_output",
        "//dlinear/symbolic",
        "//dlinear/util:box",
        "//dlinear/util:config",
    ],
)

cpplint()
