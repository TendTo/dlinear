load("//tools:cpplint.bzl", "cpplint")
load("//tools:dlinear.bzl", "dlinear_cc_library", "dlinear_srcs")

package(default_visibility = [
    "//benchmark:__subpackages__",
    "//dlinear:__subpackages__",
    "//pydlinear:__subpackages__",
    "//test:__subpackages__",
])

dlinear_srcs(
    name = "srcs",
    subfolder = "onnx",
)

dlinear_cc_library(
    name = "node_op_type",
    srcs = ["NodeOpType.cpp"],
    hdrs = ["NodeOpType.h"],
    implementation_deps = ["//dlinear/util:exception"],
)

dlinear_cc_library(
    name = "tensor",
    srcs = ["Tensor.cpp"],
    hdrs = ["Tensor.h"],
    implementation_deps = [
        "//dlinear/symbolic:literal",
        "//dlinear/util:exception",
        "@fmt",
    ],
    deps = [
        "//dlinear/libs:onnx",
        "//dlinear/libs:xtensor",
        "//dlinear/symbolic",
        "//dlinear/util:concepts",
        "//dlinear/util:definitions",
        "//dlinear/util:logging",
    ],
)

dlinear_cc_library(
    name = "onnx",
    srcs = ["Driver.cpp"],
    hdrs = ["Driver.h"],
    implementation_deps = ["//dlinear/util:exception"],
    local_defines = select({
        "//tools:pydlinear_build": ["DLINEAR_PYDLINEAR"],
        "//conditions:default": [],
    }),
    deps = [
        ":node_op_type",
        ":tensor",
        "//dlinear/libs:gmp",
        "//dlinear/libs:onnx",
        "//dlinear/parser:driver",
        "//dlinear/solver:relu_constraint",
        "//dlinear/symbolic",
        "//dlinear/symbolic:literal",
        "//dlinear/util:concepts",
    ],
)

cpplint()
