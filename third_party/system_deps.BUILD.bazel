load("@rules_cc//cc:defs.bzl", "cc_import")

SYSTEM_HEADERS_DIR = "include/"
SYSTEM_LIB_DIR = "lib/x86_64-linux-gnu/"

package(default_visibility = ["//visibility:public"])

cc_import(
    name = "zlib",
    hdrs = [
        SYSTEM_HEADERS_DIR + "zlib.h",
    ],
    includes = [SYSTEM_HEADERS_DIR],
    interface_library = SYSTEM_LIB_DIR + "libz.so",
    system_provided = True,
)

cc_library(
    name = "zlib_deps",
    deps = [":zlib"],
)

cc_import(
    name = "gmp",
    hdrs = [
        SYSTEM_HEADERS_DIR + "gmp.h",
    ],
    includes = [SYSTEM_HEADERS_DIR],
    interface_library = SYSTEM_LIB_DIR + "libgmp.so",
    system_provided = True,
)

cc_library(
    name = "gmp_deps",
    deps = [":gmp"],
)

cc_import(
    name = "gmpxx",
    hdrs = [
        SYSTEM_HEADERS_DIR + "gmpxx.h",
    ],
    includes = [SYSTEM_HEADERS_DIR],
    interface_library = SYSTEM_LIB_DIR + "libgmpxx.so",
    system_provided = True,
)

cc_library(
    name = "gmpxx_deps",
    deps = [":gmpxx"],
)

cc_import(
    name = "mpfr",
    hdrs = [
        SYSTEM_HEADERS_DIR + "mpfr.h",
    ],
    includes = [SYSTEM_HEADERS_DIR],
    interface_library = SYSTEM_LIB_DIR + "libmpfr.so",
    system_provided = True,
)

cc_library(
    name = "mpfr_deps",
    deps = [":mpfr"],
)

cc_import(
    name = "fmt",
    hdrs = [
        SYSTEM_HEADERS_DIR + "fmt/format.h",
        SYSTEM_HEADERS_DIR + "fmt/ostream.h",
        SYSTEM_HEADERS_DIR + "fmt/printf.h",
        SYSTEM_HEADERS_DIR + "fmt/ranges.h",
    ],
    includes = [SYSTEM_HEADERS_DIR],
    interface_library = SYSTEM_LIB_DIR + "libfmt.so",
    system_provided = True,
)

cc_library(
    name = "fmt_deps",
    deps = [":fmt"],
)

cc_import(
    name = "spdlog",
    hdrs = [SYSTEM_HEADERS_DIR + "spdlog/spdlog.h"],
    includes = [SYSTEM_HEADERS_DIR],
    interface_library = SYSTEM_LIB_DIR + "libspdlog.so",
    system_provided = True,
)

cc_library(
    name = "spdlog_deps",
    deps = [":spdlog"],
)

cc_import(
    name = "argparse",
    hdrs = [SYSTEM_HEADERS_DIR + "argparse/argparse.hpp"],
    includes = [SYSTEM_HEADERS_DIR],
    system_provided = True,
)

cc_library(
    name = "argparse_deps",
    deps = [":argparse"],
)
