digraph mygraph {
  node [shape=box];
  ":dlinear"
  ":dlinear" -> "/util:config"
  ":dlinear" -> "/solver:solver"
  ":dlinear" -> "/util:argparser"
  "/util:argparser"
  "/util:argparser" -> "/libs:qsopt_ex"
  "/util:argparser" -> ":version"
  "/util:argparser" -> "/util:config"
  "/util:argparser" -> "/util:exception"
  "/util:argparser" -> "/util:filesystem"
  "/util:argparser" -> "/util:logging"
  "/util:argparser" -> "@argpars"
  "/util:argparser" -> "/libs:soplex"
  "@argpars"
  "/solver:solver"
  "/solver:solver" -> "/libs:gmp"
  "/solver:solver" -> "/mps:mps"
  "/solver:solver" -> "/solver:context"
  "/solver:solver" -> "/solver:solver_guard"
  "/solver:solver" -> "/solver:solver_output"
  "/solver:solver" -> "/util:exception"
  "/solver:solver" -> "/util:config"
  "/solver:solver" -> "/smt2:smt2"
  "/smt2:smt2"
  "/smt2:smt2" -> "/solver:logic\n/util:scoped_structures"
  "/smt2:smt2" -> "/smt2:scanner\n/smt2:parser"
  "/smt2:smt2" -> "/symbolic:symbolic"
  "/smt2:smt2" -> "/smt2:sort"
  "/smt2:smt2" -> "/smt2:term"
  "/smt2:smt2" -> "@flex_lexer"
  "/smt2:smt2" -> "/util:math"
  "/smt2:smt2" -> "/util:logging"
  "/smt2:smt2" -> "/util:config"
  "/smt2:smt2" -> "/util:box"
  "/smt2:smt2" -> "/solver:context"
  "/smt2:sort"
  "/smt2:sort" -> "/symbolic:symbolic"
  "/smt2:sort" -> "/util:exception"
  "/solver:solver_guard"
  "/solver:solver_guard" -> "/util:infinity"
  "/solver:solver_guard" -> "/symbolic:symbolic"
  "/solver:solver_guard" -> "/util:config"
  "/mps:mps"
  "/mps:mps" -> "/solver:context"
  "/mps:mps" -> "/mps:scanner\n/mps:parser"
  "/mps:mps" -> "/symbolic:symbolic"
  "/mps:mps" -> "/mps:mps_data"
  "/mps:mps" -> "@flex_lexer"
  "/mps:mps" -> "/util:timer"
  "/mps:mps" -> "/util:exception"
  "@flex_lexer"
  "/mps:mps_data"
  "/mps:mps_data" -> "/util:exception"
  "/mps:mps" -> "/util:logging"

  "/solver:context"
  "/solver:context" -> "/symbolic:literal"
  "/solver:context" -> "/libs:qsopt_ex"
  "/solver:context" -> "/util:signal_handler_guard\n/util:interrupt\n@picosat"
  "/solver:context" -> "/libs:soplex"
  "/solver:context" -> "/util:infinity"
  "/solver:context" -> "/solver:logic\n/util:scoped_structures"
  "/solver:context" -> "/util:box"
  "/solver:context" -> "/util:config"
  "/solver:context" -> "/util:logging"
  "/solver:context" -> "/symbolic:predicate_abstractor"
  "/solver:context" -> "/symbolic:plaisted_greenbaum_cnfizer"
  "/solver:context" -> "/symbolic:symbolic"
  "/solver:context" -> "/symbolic:if_then_else_eliminator"
  "/solver:context" -> "/libs:gmp"
  "/solver:context" -> ":version"
  ":version"
  ":version" -> ":generate_version_header"
  ":generate_version_header"
  "/symbolic:if_then_else_eliminator"
  "/symbolic:if_then_else_eliminator" -> "/util:logging"
  "/symbolic:if_then_else_eliminator" -> "/symbolic:nnfizier"
  "/symbolic:if_then_else_eliminator" -> "/symbolic:symbolic"
  "/symbolic:if_then_else_eliminator" -> "/util:timer"
  "/symbolic:if_then_else_eliminator" -> "/util:stats"
  "/util:signal_handler_guard\n/util:interrupt\n@picosat"
  "/symbolic:predicate_abstractor"
  "/symbolic:predicate_abstractor" -> "/util:logging"
  "/symbolic:predicate_abstractor" -> "/symbolic:formula_visitor"
  "/symbolic:predicate_abstractor" -> "/symbolic:symbolic"
  "/symbolic:predicate_abstractor" -> "/util:timer"
  "/symbolic:predicate_abstractor" -> "/util:stats"
  "/symbolic:plaisted_greenbaum_cnfizer"
  "/symbolic:plaisted_greenbaum_cnfizer" -> "/util:logging"
  "/symbolic:plaisted_greenbaum_cnfizer" -> "/util:exception"
  "/symbolic:plaisted_greenbaum_cnfizer" -> "/symbolic:cnfizer"
  "/symbolic:plaisted_greenbaum_cnfizer" -> "/symbolic:formula_visitor"
  "/symbolic:plaisted_greenbaum_cnfizer" -> "/symbolic:nnfizier"
  "/symbolic:plaisted_greenbaum_cnfizer" -> "/symbolic:symbolic"
  "/symbolic:plaisted_greenbaum_cnfizer" -> "/util:timer"
  "/symbolic:plaisted_greenbaum_cnfizer" -> "/util:stats"
  "/util:stats"
  "/symbolic:cnfizer"
  "/symbolic:cnfizer" -> "/symbolic:nnfizier"
  "/symbolic:cnfizer" -> "/symbolic:symbolic"
  "/symbolic:cnfizer" -> "/util:logging"
  "/symbolic:nnfizier"
  "/symbolic:nnfizier" -> "/symbolic:symbolic"
  "/symbolic:nnfizier" -> "/util:logging"
  "/smt2:scanner\n/smt2:parser"
  "/mps:scanner\n/mps:parser"
  "/solver:solver_output"
  "/solver:solver_output" -> "/util:exception"
  "/solver:solver_output" -> "/util:timer"
  "/solver:solver_output" -> "/libs:gmp"
  "/solver:solver_output" -> "/util:box"
  "/util:box"
  "/util:box" -> "/util:logging"
  "/util:box" -> "/util:math"
  "/util:box" -> "/symbolic:symbolic"
  "/util:timer"
  "/util:timer" -> "/util:logging"
  "/solver:logic\n/util:scoped_structures"
  "/solver:logic\n/util:scoped_structures" -> "/util:exception"
  "/smt2:term"
  "/smt2:term" -> "/util:logging"
  "/smt2:term" -> "/symbolic:symbolic"
  "/smt2:term" -> "/util:exception"
  "/symbolic:literal"
  "/symbolic:literal" -> "/symbolic:symbolic"
  "/symbolic:formula_visitor"
  "/symbolic:formula_visitor" -> "/symbolic:symbolic"
  "/symbolic:symbolic"
  "/symbolic:symbolic" -> "/util:logging"
  "/symbolic:symbolic" -> "@drake"
  "/symbolic:symbolic" -> "/util:exception"
  "/util:math"
  "/util:math" -> "/util:exception"
  "/util:math" -> "/util:logging"
  "/util:math" -> "/libs:gmp"
  "@drake" -> "/util:infinity"
  "@drake" -> "/libs:gmp"
  "@drake"
  "/util:infinity"
  "/util:infinity" -> "/libs:qsopt_ex"
  "/util:infinity" -> "/libs:gmp"
  "/util:infinity" -> "/util:config"
  "/util:infinity" -> "/util:exception"
  "/util:infinity" -> "/util:logging"
  "/util:infinity" -> "/libs:soplex"
  "/util:config"
  "/util:config" -> "/util:exception"
  "/util:config" -> "/util:filesystem"
  "/util:filesystem"
  "/util:filesystem" -> "/util:logging"
  "/util:exception"
  "/util:exception" -> "/util:logging"
  "/util:exception" -> "@spdlog"
  "/util:logging"
  "/util:logging" -> "@spdlog"
  "@spdlog"
  "/libs:gmp"
  "/libs:gmp" -> "@gmpxx"
  "/libs:qsopt_ex"
  "/libs:qsopt_ex" -> "@qsopt_ex"
  "/libs:qsopt_ex" -> "@gmpxx"
  "@qsopt_ex"
  "@qsopt_ex" -> "@zlib"
  "@qsopt_ex" -> "@bzip2lib"
  "@bzip2lib"
  "/libs:soplex"
  "/libs:soplex" -> "@soplex"
  "@soplex"
  "@soplex" -> "@zlib"
  "@soplex" -> "@gmpxx"
  "@gmpxx"
  "@gmpxx" -> "@gmp"
  "@gmp"
  "@zlib"
}
