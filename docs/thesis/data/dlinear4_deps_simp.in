digraph mygraph {
  node [shape=box];
  "/:dreal"
  "/:dreal" -> "/:main_program"
  "/:main_program"
  "/:main_program" -> "/util:filesystem\n@ezoptionparser"
  "/:main_program" -> "@fmt"
  "/:main_program" -> "/:qsopt-ex"
  "/:main_program" -> "/:soplex"
  "/:main_program" -> "/util:infty"
  "/:main_program" -> "/smt2"
  "/:main_program" -> "/solver:config"
  "/:main_program" -> "/util:logging"
  "/util:filesystem\n@ezoptionparser"
  "/smt2"
  "/smt2" -> "/solver"
  "/smt2" -> "/smt2:parser"
  "/smt2" -> "/smt2:scanner"
  "/smt2" -> "/util:math"
  "/smt2" -> "/symbolic"
  "/smt2" -> "/smt2:logic"
  "/smt2" -> "/smt2:sort"
  "/smt2" -> "/smt2:term"
  "/smt2:term"
  "/smt2:term" -> "/util:exception"
  "/smt2:term" -> "/symbolic"
  "/solver"
  "/solver" -> "/util:box"
  "/solver" -> "/symbolic"
  "/solver" -> "/smt2:logic"
  "/solver" -> "/:version_header"
  "/solver" -> "/smt2:sort"
  "/solver" -> "/util:math"
  "/solver" -> "/util:nnfizer"
  "/solver" -> "/util:stat\n/util:timer"
  "/solver" -> "/util:exception"
  "/solver" -> "/util:scoped_vector\n/util:scoped_unordered_set\n/util:scoped_unordered_map"
  "/solver" -> "/util:cds"
  "/solver" -> "//third_party/thread_pool\n@picosat\n/util:interrupt"
  "/solver" -> "/util:bitset"
  "/solver" -> "/util:assert"
  "/solver" -> "/util:logging"
  "/solver" -> "/util:if_then_else_eliminator"
  "/solver" -> "/solver:config"
  "/solver" -> "/:soplex"
  "/solver" -> "/util:infty"
  "/solver" -> "/util:literal"
  "/solver" -> "/util:predicate_abstractor\n/util:pg_cnfizer\n/util:n_cnfizer"
  "/solver" -> "//third_party/optional"
  "/solver" -> "/:qsopt-ex"
  "/solver" -> "@fmt"
  "/:qsopt-ex"
  "/:qsopt-ex" -> "@linux_libs//:gmpxx"
  "/util:literal"
  "/util:literal" -> "/symbolic"
  "/solver:config"
  "/solver:config" -> "/util:bitset"
  "/solver:config" -> "/util:box"
  "//third_party/thread_pool\n@picosat\n/util:interrupt"
  "/util:cds"
  "/util:cds" -> "@cds"
  "@cds"
  "/util:scoped_vector\n/util:scoped_unordered_set\n/util:scoped_unordered_map"
  "/smt2:sort"
  "/smt2:sort" -> "/util:exception"
  "/smt2:sort" -> "/symbolic"
  "/:version_header"
  "/:soplex" -> "@linux_libs//:gmpxx"
  "/:soplex" -> "@linux_libs//:gmp"
  "/:soplex" -> "@linux_libs//:z"
  "@linux_libs//:z"
  "/util:if_then_else_eliminator"
  "/util:if_then_else_eliminator" -> "/symbolic"
  "/util:if_then_else_eliminator" -> "/util:nnfizer"
  "/util:if_then_else_eliminator" -> "/util:stat\n/util:timer"
  "/util:if_then_else_eliminator" -> "/util:logging"
  "/util:stat\n/util:timer"
  "/util:nnfizer"
  "/util:nnfizer" -> "/symbolic"
  "/util:bitset"
  "/util:bitset" -> "//third_party/bitset"
  "//third_party/bitset"
  "//third_party/optional"
  "/smt2:logic"
  "/smt2:logic" -> "/util:exception"
  "/util:box"
  "/util:box" -> "/:gmp"
  "/util:box" -> "/symbolic"
  "/util:box" -> "/util:assert"
  "/util:box" -> "/util:exception"
  "/util:box" -> "/util:logging"
  "/util:box" -> "/util:math"
  "/util:box" -> "/util:infty"
  "/util:math"
  "/util:math" -> "/util:exception"
  "/util:math" -> "/:gmp"
  "/symbolic"
  "/symbolic" -> "//third_party/drake"
  "/symbolic" -> "/util:logging"
  "/symbolic" -> "/util:exception"
  "/symbolic" -> "/util:assert"
  "/util:assert"
  "/util:exception"
  "/util:exception" -> "@fmt"
  "/util:logging"
  "/util:logging" -> "@spdlog"
  "@spdlog"
  "@spdlog" -> "@fmt"
  "//third_party/drake"
  "//third_party/drake" -> "/util:infty"
  "//third_party/drake" -> "/:gmp"
  "/util:infty"
  "/util:infty" -> "@linux_libs//:gmpxx"
  "/:gmp"
  "/:gmp" -> "@linux_libs//:gmpxx"
  "/:gmp" -> "@fmt"
  "@fmt"
  "@linux_libs//:gmpxx"
  "@linux_libs//:gmpxx" -> "@linux_libs//:gmp"
  "@linux_libs//:gmp"
  "/smt2:scanner"
  "/smt2:scanner" -> "/smt2:parser"
  "/smt2:scanner" -> "//third_party/lexyacc"
  "/smt2:parser"
  "/smt2:parser" -> "//third_party/lexyacc"
  "//third_party/lexyacc"
}
